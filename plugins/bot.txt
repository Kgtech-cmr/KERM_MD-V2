const _0x4522c5 = _0x169a;
function _0x169a(_0x3aab5e, _0x38ed8a) {
  const _0x163e39 = _0x16c4();
  _0x169a = function (_0x450556, _0x24b46b) {
    _0x450556 = _0x450556 - 117;
    let _0x312177 = _0x163e39[_0x450556];
    return _0x312177;
  };
  return _0x169a(_0x3aab5e, _0x38ed8a);
}
(function (_0x4a4b9a, _0x43fe51) {
  const _0xe712b8 = _0x169a;
  const _0x5cdae0 = _0x4a4b9a();
  while (true) {
    try {
      const _0x4d02c9 = parseInt(_0xe712b8(236)) / 1 + -parseInt(_0xe712b8(595)) / 2 * (-parseInt(_0xe712b8(191)) / 3) + -parseInt(_0xe712b8(551)) / 4 + parseInt(_0xe712b8(258)) / 5 + parseInt(_0xe712b8(563)) / 6 * (-parseInt(_0xe712b8(674)) / 7) + -parseInt(_0xe712b8(472)) / 8 * (-parseInt(_0xe712b8(246)) / 9) + parseInt(_0xe712b8(417)) / 10 * (-parseInt(_0xe712b8(401)) / 11);
      if (_0x4d02c9 === _0x43fe51) {
        break;
      } else {
        _0x5cdae0.push(_0x5cdae0.shift());
      }
    } catch (_0x11fcf9) {
      _0x5cdae0.push(_0x5cdae0.shift());
    }
  }
})(_0x16c4, 561001);
const _0x170f1d = _0x4bb2;
(function (_0x21e72b, _0x2d540c) {
  const _0x58ebf1 = _0x169a;
  const _0x3dd32b = _0x4bb2;
  const _0x147efa = _0x21e72b();
  while (true) {
    try {
      const _0x55213f = parseInt(_0x3dd32b(764)) / 1 * (-parseInt(_0x3dd32b(494)) / 2) + parseInt(_0x3dd32b(359)) / 3 * (parseInt(_0x3dd32b(837)) / 4) + parseInt(_0x3dd32b(435)) / 5 * (parseInt(_0x3dd32b(381)) / 6) + parseInt(_0x3dd32b(383)) / 7 + -parseInt(_0x3dd32b(327)) / 8 * (-parseInt(_0x3dd32b(346)) / 9) + parseInt(_0x3dd32b(616)) / 10 * (-parseInt(_0x3dd32b(469)) / 11) + parseInt(_0x3dd32b(884)) / 12;
      if (_0x55213f === _0x2d540c) {
        break;
      } else {
        _0x147efa[_0x58ebf1(647)](_0x147efa[_0x58ebf1(201)]());
      }
    } catch (_0x30fc74) {
      _0x147efa[_0x58ebf1(647)](_0x147efa[_0x58ebf1(201)]());
    }
  }
})(_0x57fc, 505011);
const events = require(_0x170f1d(530));
const Config = require(_0x170f1d(532));
let prefix = Config[_0x4522c5(609)][_0x4522c5(619)]()[_0x170f1d(889)](_0x170f1d(711)) ? "" : Config.HANDLERS[0];
let {
  isUrl,
  sleep,
  getBuffer,
  format,
  parseMention,
  parsedJid,
  getRandom,
  fancy,
  randomfancy,
  tiny,
  botpic,
  tlang
} = require(_0x170f1d(803));
function _0x16c4() {
  const _0x576e5b = ["unlink", "unafk", "turn On/Off auto bio", "WebMessageInfo", "stopsuhail", "enable/disable pm permit", "*s·¥ú ú·¥Ä…™ ü-·¥ç·¥Ö ‚Ä¢ ·¥Ä ü…™·¥†·¥á ·¥ç·¥áss·¥Ä…¢·¥á s·¥á·¥õ·¥õ…™…¥…¢s*\n\n*KeyWords for Alive Message:*\n &user :", "664xKCiMf", "\n\n waMessage : ", "from", "!!!*\n  *Set to:* ```", "group", "sticker-", "set auto reply filter messages", "mimetype", ".png", "demote", "*Provided command is'nt disbaled for rent users*", "\n\nCommand: autobio ", "concat", "Disabled Cmd list", "headers", "There's an Error While Adding Bgm Song", "remoteJid", "RENT BOT :  Unknown DisconnectReason: ", "\n\nCommand: allbgm", "audiourl", "&user", "readMessages", "writeToFile", " on | all\n  ", "permit", "readFileSync", "newbgm", "bgmarray", "*Hey i already inform you!*\n", "findOne", "971258iCugaJ", "923004591719@s.whatsapp.net", "timezone", "location", " !*", "afk @time, @date, @line(pickupline), @quote(random quote), @user*\n  \n*To turn off use ", "alive_get", "\nitem1.X-ABLabel:Click here to chat\nitem2.EMAIL;type=INTERNET:", "template: ", "mentionedJid", "email", "delete", "fileSha256", "5769442kArOSX", "replace", "RENT BOT USER : [", "*Bgm Succesfully deactivated*", "set auto reply for mention", "addbgm", "Error parsing JSON:", "sendUi", "test", "‚îå‚îÄ‚îÄ‚îÄ‚≠ì\n‚ùí *[AMAZING YOU RENTT SUHAIL-MD]*\n‚ùí _Your Session Id, Dont provide!_\n‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚≠ì\n", " \n\t", "tools", "./temp/null.", "RENT BOT :  Connection TimedOut, Reconnecting...", "rdcmd", "cMod", "stoprent", "sendVideoAsSticker", "send", "events", "name", "*Read it https://github.com/SuhailTechInfo/Suhail-Md/wiki/mention*", "*_Successfully set filter to '", "contacts", "erorr in userImages() : ", "An Error Occurred, Repeat Command!", "*[LIST OF FILTERED WORDS]*\n\n", "enable", "[ suhail : how can i help you! ]", "filter", " a Personal Assistant of ", "abio", "parse", "protocolMessage", "fromBuffer", "https://api.popcat.xyz/pickuplines", "status", "@s.whatsapp.net", "author", "'!_*", "rentbot", "getName", "participants", "\n\nCommand: ", "asSticker", "all", "owner", " !*\nHere's Your Pairing Code: *", "mp4", "üî∞ *", " ]\n‚ùí  Mode : ", "Audio converted to black screen video successfully!", "@line, ‚è∞Time: @time üöÄ@bot", "users", "reason", "flist", "pickupline", "*Auto_Bio Succesfully deactivated*", "then", "smdvid", "loggedOut", "923184474176@s.whatsapp.net", "!!!*\n*Provide Valid instruction, such as on/off to enable/disable pmPermit.*", "format", "unAfk.*\n  ", "call", "rmdirSync", "user", "sounds: ", " -c:v copy -c:a aac -map 0:v:0 -map 1:a:0 ", "copyNForward", "*_Request denied!_*", "ERROR IN AFK MAIN\n", "*Song _", "ERROR SENDING MENTION\t", "sendFileUrl", "*You did'nt set mention!*\n*https://github.com/SuhailTechInfo/Suhail-Md/wiki/mention*", "[GROUP PARTICEPENTS ADD ERROR] ", "subject", "get list of auto reply word", "sendMedia", "status@broadcast", "bind", "decodeJid", "head", "node-fetch", "ERROR", "off", "mention", "contextInfo", "application/octet-stream", "_Hey buddy! I am already a bot!_", "660nmIOmh", "videoMessage", "  \n  \n  *whatsapp bio automatically update in every minuts!*\n  ", " -vf \"format=yuv420p\" ./blackScreen.mp4", "@broadcast", "400955UpqzON", "120363025246125888@g.us", "alias", "alloc", "add", "Suhail-MD On Rent", "_ERROR!_", "silent", "writeFileSync", "verifiedName", "0@s.whatsapp.net", "167060DxZJSY", "bot", "isBaileys", "[GROUP PARTICEPENTS REMOVE ERROR] ", "*Please wait!*", "audioMessage", "./temp/convertedVideo.mp4", "\n  *Example: My owner is AFK*\n  *Last seen before #lastseen*\n  *Also update status: ", "warncount", "3861iSnnXv", "restartRequired", "asDocument", "30wRDsyY", "ERROR IN MENTION CMD : ", "\n\nCommand: addbgm", "rentdisable", "promote", "[GROUP PARTICEPENTS PROMOTE ERROR] ", "existsSync", "participant", "*_Pmpermit disabled, please enable it!!_*", "END ----- CALLED!", "stop rentbot from a user!", "pair", "sendImageAsSticker", "ERRORR!", ".mov", "suhaillist", "gurupaste", "*No user has rent 'suhail md' yet!*", "open", "length", "alive_text", "isGroup", "type/", "stop auto reply from a word", "RENT BOT :  ‚úÖ Whatsapp Login Successful!", "messages.upsert", "disablecmds", "audio", "RENT BOT :  Bad Session File, Please Delete Session and Scan Again", "rentlist", "*Hii this is ", "remove a song from bgm", "mute", "values", "join", "connectionLost", "923184474176", "new", "group-participants.update", "slice", "mtype", "messages", "botname", "504616gMukdO", "flist to get list of filtered words!*", "‚¨°‚îÇ‚ñ∏ ", "stringify", "rentbot pair by reply/mention user!_", "alive_image", "forEach", "*_No user has rent 'suhail md' yet!_*\n*_Can't disable cmds for rented users, If the bot is not rented!_*", "ephemeralMessage", "*Use ", "splice", "*Provide a valid cmd name, that available in bot!*\n*To Stop using from users who have rent 'Suhail'!", "Suhail-Md", "*Provide a word that set in filter!*\n*Use ", "‚û¨ Suhail SER", "\n\nCommand: bgm ", "match", "CmdName: pmPermit Required", "_Can't use QR right now!_", "*_Use on/off to enable/disable Bgm sounds_*", "url", "ptv", "^[]", "loadMessage", "downloadMediaMessage", "[ERROR] ", "reply_message", " *BGM SONG INFORMATION*\n", " : ", "quoted", "error", "announcement", "creds", "[GROUP PARTICEPENTS DEMOTE ERROR] ", "promises", "imageMessage", "updateOne", "sendFromUrl", "*Hey @", " on | 212,91``` \n  \n\n", "style", "&uptime", "reply", "1SFbmyi", "reply_text", "RENT BOT :  Connection Lost from Server, reconnecting...", "text", "find", "statusCode", "*Name _'", "*Hii\n            ", "content-type", ".avi", "thumbnail", "_Baileys/", "false", "WORKTYPE", "isBot", "pattern", "&quote", "Activated", "Days ", "&line", "alive_video", "use .mention info to get all inforamtion of mention!", "Suhail;;;", "' Successfuly disabled for rented users!*", "entries", "Scan this QR to become a temporary bot\n\n1. Click the three dots in the top right corner\n2. Tap Link Devices\n3. Scan this QR \nQR Expired in 30 seconds", "*Rent bot successfully LOGOUT from @", "enabled", "Erorr in client.sendFileUrl() : ", "*Provide a valid cmd name, that available in bot!*\n*To enable using from users who have rent 'Suhail'!", "isBuffer", "matchAll", "!_\n_OR : ", "```\n  \n  *Available Cmds:*```\n  ", "*Hello @", "updateProfileStatus", "448800AWSaJK", "client.js --------- messages.upsert \n", "3SjMmej", "Unknown", "SmdOfficial", " Have own whatsapp bot!*:", "setCmdAlias", "senderName", "notify", "RENT BOT :  ‚ÑπÔ∏è Connecting to WhatsApp...", "' Successfuly enable for rented users!*", "image", "12ybmCfr", "Error updating data:", "video/mp4", "nillll", "linkPreview", "*New Song Added in BGM with Name : ", "body", "viewonce", "badSession", "@g.us", "*_PmPermit deactivated Succesfully!!!_*", "moment-timezone", "function", "get url for audio and converted into black video", "random", "bgm", "filter word:reply_text!*", "File deleted successfully", "Chrome", "./blackScreen.mp4", "\n\n*_Next time You'll be blocked_*", " for pm._*", "uptime", "file", "*_Uhh Dear, PmPermit Already enabled!_*", "act", "lastIndexOf", "chat", "user", "RENT BOT :  Device Logged Out, Please Scan Again And Run.", "isCreator", "ext", "11938ildkWw", "Error deleting file:", "schedule", "\n\nCommand: AFKs", "rentbotlist", "error while checking bgm sounds\n, ", "OwnerName", "*Please reply to a user for action.*", "base64", "BOT_NAME", "\nitem1.TEL;waid=", " need permission for pm_*", "end", "registered", "HANDLERS", "‚î¨‚îÇ‚ñ∏\n‚îÇ‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ¬∑¬∑¬∑‚ñ∏‚ñ∏\n‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ¬∑¬∑¬∑‚ñ∏", "../lib/exif", "./lib/Asta.js/sendWelcome()\n", "sendFile", "viewOnce", "relayMessage", "data", "getFile", "poll", "toLowerCase", "*Please do not Spam,You got ", "\nCommand: disapprove ", ", Minutes ", "WhatsApp", "rent", "sendMessage", "*Can't set filter!*", ".m4v", "areply", "Credentials file saved successfully.", " Succesfully!_*\n*_Now ", "fromMe", "unlinkSync", "video", "getbgm", "[GROUP] : ", "keys", "\n\n*Also Add photo and video url in Alive*\n", "ffmpeg -i ./blackScreen.mp4 -i ", "black", "rentuser", "info", "msg", "' deleted!_*", "./temp/", "*provide cmdName to disable for rent user!*", "ownername", "push", "../config.js", "../lib/serialized", " \n*Parmanent Disabled Commands*\n\t", "logout", " *@", "*You ask for \"Session\" but not provide session_ID!*", "230216lXWRkm", "*Auto_Bio Succesfully enabled*", "logout running bot with device !", "fakeMessage", "key", ";;;;\nitem4.X-ABLabel:Region\nEND:VCARD", "```.alive``` url_here \n```Hey &user``` üçÇ\n```I Am Suhail-Md, A Multidevice Whatsapp User Bot.```\nBot alive since ```&uptime```\n*Quote:* ```&quote```\n*Pickup Line:* ```&line```\n\n", "< cmname / tag / ytmp4 etc.>", "*Can't delete filter!*", "\nitem3.X-ABLabel:GitHub\nitem4.ADR:;;", ", Hours ", "Disabled_*\n\nUse *", "path", "autobio off* to turn off auto_bio!", "listbgm", "```.alive Your_Alive_Message_here``` https://telegra.ph/file/ec9bc5038601821f2eb84.jpg", "*Give Me Song Name to Delete From BGM*", "alive_url", "trim", "aisa/karachi", "2362213Ozseqz", "fs-extra", "ffmpeg -f lavfi -i color=c=black:s=1280x720:d=", "order", "image/webp", "RENT BOT :  Connection Replaced, Another New Session Opened, Please Close Current Session First", "add song in bgm", "<on/off>", "substring", "disable", "*_Revoked permission of ", "unmute", "Finally, You are back!", "split", "*_PmPermit ", "disapprove", "toUpperCase", "alive", "\n\nCommand:flist", "conversation", "An error occurred:", "Suhail-Md Rent list", "https://pastebin.guruapi.tech/pastes?action=getpaste&id=", "ffprobe -v error -show_entries format=duration -of default=noprint_wrappers=1:nokey=1 ", "*\n\n*_Use Pair Code to become a temporary bot!_*\n\n1. Click the three dots in the top right corner\n2. Tap Link Devices\n3. Scan this QR \n4. Click Connect with Number\n\n*_NOW Put above \"PAir-Code\" before it'll expire!_*\n", "Updated", "sender", "RENT BOT :  Restart Required, Restarting...", "parseMention", "./whatsapp.json", "startAutoBio entereed!", "downloadAndSaveMediaMessage", "```.alive Your_Alive_Message_here```", ".mp4", "settings", "remove", "\n\nUse *", "connection.update", ".webp", "creds.json", "gif", "null", "some", "webp", "Disable cmds for rent bot users!", "lastseen", "Shows a list of users who has rent a bot!", "‚îå‚îÄ‚îÄ‚îÄ‚≠ì\n‚ùí  [SUHAIL-MD CONNECTED] \n‚ùí  Prefix : [ ", "BEGIN:VCARD\nVERSION:3.0\nN:", "bot_", "get", "pino", "\n\nCommand: approve ", " Contact", "\nFN:", "_Reply to Audio MEssage!_", "6311964NwyYzY", "./exif", "turn off away from keyboard", "prefix", "\n‚ùí  Plugins : ", "title", "[CALL ACCEPT ERROR] ", "not_announcement", "packname", "approve", "ban", "forwardOrBroadCast2", "includes", "deact", "image/jpeg", "Can't get SESSION_ID from GURU Server\nPlease Scan Qr From ", "../lib/", "'_ does not exist in BGM.*", "rentbot session scan_Id_\n", "8945", "times", "message", "sendTextWithMentions", "react", "rentcmdoff", "updateBlockStatus", "desc", "string", "userImages", "disabled", "jid", "afk", "CLIENT STORE ERROR:\n", "true", "Chrome (Linux)", "groupMetadata", "date", "creds.update", "*\n\n", "*_Auto_Bio currently *", "contact", "\n‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚≠ì", "\n*Temporary Disabled commands*\n\t", "file-type", "permit_values", "startsWith", "externalAdReply", "\n\n*Powered by ", "*Mention updated!*", "smd", "\n  *Bio set:* ", "stickerMessage", "rentlistcmd", "abgm", "Enabled_*\n*Currently Set:* ", "cmd", "https://whatsapp.com/channel/0029Va9thusJP20yWxQ6N643", "autobio on* to turn on auto_bio!", "type", "connectionClosed", "log", "away from keyboard", "private", "connecting", "viewOnceMessage", "*Auto_Bio already disabled*", "REVOKE", "connectionReplaced", "rentbot pair | ", "update", "map", "toString", ".*\n\n*Please do not send message in pm else you will be blocked automatically.*\n\n_Please wait until my owner responds to you._\n\n", "*Please follow the below option!*\n    _", "\n\nCommand:stop", "*_Uhh Dear, PmPermit Already disabled!_*", "allbgm", "renters", "555KdtQnV", "documentMessage", "Toggle On/Off to enable/disable bgm", "sendContact", " warnings.*", "sticker", "Unknown link: ", "result", "session", "fluent-ffmpeg", "shift", "word", "*[Suhail-MD Rent Users]*\n\n", "@lastseen", "endsWith", "isAsta", ".jpg", "category", "autobio @bot(botName) @owner(ownerName) @time @date @line(pickupline) @quote(@randome quote) @user*\n  ", "commands", "*Œπ Œ±–º œÉŒ∑‚ÑìŒπŒ∑—î –ΩœÉœâ ¬¢Œ±Œ∑ Œπ –Ω—î‚ÑìœÅ —ÉœÉœÖ* \n\n_Œπ Œ±–º ·¥çœÖ‚Ñì—ÇŒπ ‘É—îŒΩŒπ·¥Ñ—î œâ–ΩŒ±—Ç—ïŒ±œÅœÅ –≤œÉ—Ç_ \n_C Ä—îŒ±t—îd –≤·Éß : —ïœÖ–ΩŒ±Œπ‚Ñì t—î·¥Ñ ú info_\n_If any query : wa.me/923184474176_\n\n\n*_Update Alive Message by adding text with Alive_* \n*Eg: _.alive Your_Alive_Message_*", "Uhh Please, Reply to Audio/Video To Add In Bgm", "*PmPermit Currently *", "mkdir", "caption", ", Use ", "allowJids", "pushName", "Approves that person for pm", "toDataURL", "dir", "audio/mpeg", "&time", "checkban.ban", "4757228", "rlcmd", "_\n    _", "ignore", "fromObject", "utf-8", "documentWithCaptionMessage", ".jpeg", "autobio", "output", "set filter message to specific text, so that bot replied user from chat by giving text!", "273505fSJgkG", "blockJids", "*_You didn't set any filter!_*", "*_please provide number for \"pair\" connection!_*\n_Example: ", "\n\n*Update Alive by adding text with Alive*\n", "exec", "forwardOrBroadCast", "[CALL ERROR] ", "sendText", "yes", "81ivgNaV", "serializeM", "Forward function Called and Type is : ", "\nlastseen : ", "conservation", "\n\nCommand: UnAFK", "rentsuhail", "categories", " off \n  ", "*You are not AFK.*", "@hapi/boom", "rentenable", "2025080CqIrFh"];
  _0x16c4 = function () {
    return _0x576e5b;
  };
  return _0x16c4();
}
if (global[_0x170f1d(626)] instanceof Array) {
  console[_0x170f1d(659)]();
} else {
  global[_0x4522c5(190)] = [];
}
if (global[_0x170f1d(550)] instanceof Array) {
  console[_0x4522c5(173)]();
} else {
  global[_0x170f1d(550)] = [];
}
let disabledperma = [_0x170f1d(672), _0x170f1d(393), _0x170f1d(334), _0x4522c5(432), _0x4522c5(257)];
const {
  userdb,
  smd,
  fetchJson,
  smdJson,
  smdBuffer,
  sendWelcome,
  runtime,
  bot_
} = require(_0x170f1d(803));
const util = require("util");
const fs = require(_0x170f1d(410));
const axios = require(_0x170f1d(467));
const fetch = require(_0x170f1d(458));
const {
  cmd
} = require(_0x170f1d(773));
const {
  TelegraPh
} = require(_0x170f1d(823));
const ffmpeg = require(_0x170f1d(597));
const exec = util[_0x170f1d(682)](require(_0x170f1d(687))[_0x170f1d(461)]);
let db = {};
db[_0x170f1d(443)] = async () => {
  const _0x43578e = _0x4522c5;
  const _0x3c5964 = _0x170f1d;
  const _0x257578 = _0x3c5964(856);
  try {
    return JSON[_0x3c5964(519)](fs[_0x43578e(291)](_0x257578, _0x3c5964(628)));
  } catch (_0x805239) {
    return {};
  }
};
db[_0x4522c5(182)] = async _0x4049ca => {
  const _0x39cbf8 = _0x4522c5;
  const _0x4ede9c = _0x170f1d;
  try {
    const _0x531de8 = _0x4ede9c(856);
    const _0x3601f9 = db[_0x4ede9c(443)]();
    const _0x566b25 = {
      ..._0x3601f9,
      ..._0x4049ca
    };
    fs[_0x4ede9c(424)](_0x531de8, JSON[_0x4ede9c(713)](_0x566b25, null, 2), _0x4ede9c(628));
    return _0x566b25;
  } catch (_0x52b8a1) {
    console.error(_0x39cbf8(564), _0x52b8a1);
  }
};
let filter = false;
let mention = false;
smd({
  cmdname: "mention",
  fromMe: true,
  category: _0x170f1d(652),
  desc: _0x170f1d(903),
  use: "[ url type/audio ]",
  usage: _0x170f1d(505)
}, async (_0x19267e, _0x33338f) => {
  const _0x4a61d0 = _0x4522c5;
  const _0xa0bfa6 = _0x170f1d;
  try {
    _0x33338f = _0x33338f || _0x19267e.reply_text;
    if (!_0x33338f) {
      return await _0x19267e[_0xa0bfa6(543)](_0x4a61d0(549) + _0x19267e[_0xa0bfa6(379)] + _0xa0bfa6(604) + prefix + _0xa0bfa6(336), {
        mentions: [_0x19267e[_0xa0bfa6(836)]]
      }, _0xa0bfa6(660));
    }
    if (!_0x33338f) {
      return _0x19267e[_0x4a61d0(327)]("@" + _0x19267e[_0xa0bfa6(908)][_0xa0bfa6(524)]("@")[0], {
        mentions: [_0x19267e[_0xa0bfa6(908)]]
      });
    }
    let _0x24e941 = await db[_0xa0bfa6(443)]();
    mention = _0x24e941[_0xa0bfa6(417)] || {};
    if (_0x33338f === _0xa0bfa6(696)) {
      return await _0x19267e[_0x4a61d0(514)](_0xa0bfa6(714));
    }
    if (_0x33338f === _0x4a61d0(724)) {
      if (mention[_0xa0bfa6(443)]) {
        return await _0x19267e[_0xa0bfa6(543)](mention[_0xa0bfa6(443)]);
      } else {
        return await _0x19267e[_0xa0bfa6(543)](_0xa0bfa6(361));
      }
    } else if (_0x33338f === _0xa0bfa6(791) || _0x33338f === _0xa0bfa6(796) || _0x33338f === _0xa0bfa6(669)) {
      mention[_0xa0bfa6(551)] = false;
    } else if (_0x33338f === "on" || _0x33338f === "act" || _0x33338f === _0xa0bfa6(893)) {
      mention[_0xa0bfa6(551)] = true;
    } else {
      try {
        delete _0x24e941[_0xa0bfa6(417)];
        mention = {};
      } catch {}
      mention[_0xa0bfa6(443)] = _0x33338f;
      const _0x12a29b = /\{.*\}/;
      const _0x1899e8 = _0x33338f[_0x4a61d0(488)](_0x12a29b);
      if (_0x1899e8) {
        const _0x21d2be = _0x1899e8[0];
        try {
          const _0x1c0968 = JSON[_0xa0bfa6(519)](_0x21d2be);
          mention[_0xa0bfa6(594)] = _0x1c0968;
          _0x33338f = _0x33338f[_0xa0bfa6(782)](_0x12a29b, "");
        } catch (_0x3baf90) {
          console[_0xa0bfa6(847)](_0xa0bfa6(591), _0x3baf90);
        }
      }
      mention[_0xa0bfa6(839)] = _0x33338f;
      const _0x42637e = _0x47b50b(_0x33338f);
    }
    function _0x47b50b(_0x1292f6) {
      const _0x211c12 = _0x4a61d0;
      const _0x1c9180 = _0xa0bfa6;
      const _0x173ae1 = _0x1292f6.split("\n");
      mention[_0x1c9180(579)] = {
        text: []
      };
      let _0x3b8e1f = [_0x1c9180(584), _0x1c9180(619), "audio", _0x1c9180(386), _0x211c12(196)];
      let _0x295e66 = null;
      for (const _0xe0664b of _0x173ae1) {
        const _0x31926a = _0xe0664b[_0x1c9180(524)](" ");
        if (_0x31926a[_0x211c12(448)] >= 2) {
          const _0x22b531 = _0x31926a[_0x1c9180(418)](_0x2dc92 => _0x2dc92[_0x211c12(158)](_0x1c9180(460)));
          if (_0x22b531 !== -1) {
            _0x295e66 = _0x31926a[_0x22b531][_0x1c9180(630)](5)[_0x1c9180(561)]();
            if (!mention[_0x1c9180(579)][_0x295e66]) {
              mention[_0x1c9180(579)][_0x295e66] = [];
            }
          }
          const _0x3adada = _0x31926a[_0x1c9180(560)](_0x287a1d => _0x287a1d !== _0x1c9180(460) + _0x295e66 && _0x287a1d !== "");
          if (_0x3adada[_0x1c9180(447)] > 0) {
            if (_0x3b8e1f[_0x1c9180(889)](_0x295e66)) {
              _0x3adada[_0x211c12(478)](_0x4a2fd8 => {
                const _0x427676 = _0x1c9180;
                if (_0x4a2fd8[_0x427676(315)](_0x427676(329))) {
                  mention[_0x427676(579)][_0x295e66][_0x427676(723)](_0x4a2fd8);
                }
              });
            } else if (_0x295e66 === _0x211c12(136)) {
              _0x3adada[_0x1c9180(807)](_0x3bf443 => {
                const _0x1bcf2f = _0x211c12;
                const _0x2bed03 = _0x1c9180;
                mention[_0x1bcf2f(171)][_0x295e66][_0x2bed03(723)](_0x3bf443[_0x2bed03(463)]()[_0x1bcf2f(687)](" ")[0]);
              });
            } else {
              mention[_0x1c9180(579)][_0x1c9180(839)][_0x1c9180(723)](..._0x3adada);
            }
          }
        }
      }
    }
    _0x24e941[_0xa0bfa6(417)] = mention;
    _0x24e941 = await db[_0xa0bfa6(768)](_0x24e941);
    return _0x19267e[_0xa0bfa6(732)](_0x4a61d0(161), {
      mentios: [_0x19267e[_0xa0bfa6(908)]]
    });
  } catch (_0x13937b) {
    console[_0xa0bfa6(659)](_0x4a61d0(430), _0x13937b);
  }
});
smd({
  on: _0x170f1d(839)
}, async (_0x5139e0, _0x9e6430, {
  Void: _0x1dd9fc
}) => {
  const _0x2d726c = _0x4522c5;
  const _0x1d0608 = _0x170f1d;
  if (_0x5139e0[_0x1d0608(765)][0] && _0x5139e0[_0x1d0608(765)][_0x1d0608(889)](_0x5139e0[_0x1d0608(908)])) {
    console[_0x2d726c(173)](_0x1d0608(910));
    function _0x246d40(_0xdaa049) {
      const _0x4326eb = _0x1d0608;
      const _0xc6f904 = Object[_0x4326eb(848)](_0xdaa049 || {});
      if (_0xc6f904.length > 1) {
        const _0x11145b = _0xc6f904[Math[_0x4326eb(888)](Math[_0x4326eb(434)]() * (_0xc6f904[_0x4326eb(447)] - 1)) + 1];
        const _0x4a20b4 = _0xdaa049[_0x11145b];
        if (_0x4a20b4 && _0x4a20b4[_0x4326eb(447)] > 0) {
          const _0x4753e7 = Math[_0x4326eb(888)](Math[_0x4326eb(434)]() * _0x4a20b4[_0x4326eb(447)]);
          return {
            type: _0x11145b,
            url: _0x4a20b4[_0x4753e7]
          };
        }
      }
      if (_0xdaa049[_0x4326eb(839)]) {
        return {
          url: _0xdaa049[_0x4326eb(839)][_0x4326eb(553)](" "),
          type: _0x4326eb(660)
        };
      } else {
        return undefined;
      }
    }
    if (!mention) {
      let _0xd393d9 = await db[_0x1d0608(443)]();
      mention = _0xd393d9[_0x1d0608(417)] || false;
    }
    if (!mention || !mention[_0x1d0608(551)]) {
      return;
    }
    const _0x31eed6 = _0x246d40(mention[_0x1d0608(579)]);
    if (_0x31eed6) {
      let _0x219bb5 = _0x31eed6[_0x1d0608(579)];
      let _0x5de955 = {};
      if (_0x31eed6[_0x2d726c(171)] === _0x1d0608(584)) {
        _0x219bb5 = _0x2d726c(633);
        _0x5de955 = {
          gifPlayback: true,
          ..._0x5de955
        };
      }
      try {
        const _0x51d426 = {
          caption: mention[_0x1d0608(579)]?.[_0x1d0608(839)]?.[_0x1d0608(553)](" ") || "",
          ..._0x5de955,
          ...mention[_0x1d0608(594)]
        };
        if (_0x51d426[_0x1d0608(654)] && _0x51d426[_0x1d0608(654)][_0x2d726c(159)] && _0x51d426[_0x1d0608(654)][_0x1d0608(397)].thumbnail) {
          _0x51d426[_0x1d0608(654)][_0x1d0608(397)][_0x1d0608(753)] = await smdBuffer(_0x51d426.contextInfo[_0x1d0608(397)][_0x1d0608(753)]);
        }
        await _0x5139e0[_0x1d0608(732)](_0x31eed6[_0x1d0608(739)], {
          ptt: true,
          author: _0x1d0608(601),
          packname: _0x2d726c(397),
          ..._0x51d426
        }, _0x219bb5, _0x5139e0);
      } catch (_0x3adb14) {
        console[_0x2d726c(173)](_0x1d0608(639), _0x3adb14);
        try {
          await _0x5139e0[_0x1d0608(732)](_0x31eed6[_0x2d726c(492)], {
            ptt: true,
            author: _0x1d0608(601),
            packname: _0x2d726c(397),
            ..._0x5de955
          }, _0x219bb5, _0x5139e0);
        } catch (_0x1a134f) {
          console.log(_0x1d0608(352), _0x1a134f);
        }
      }
    }
  }
});
smd({
  pattern: _0x170f1d(560),
  category: _0x170f1d(652),
  desc: _0x170f1d(573),
  use: _0x170f1d(871),
  usage: _0x170f1d(322),
  fromMe: true
}, async (_0x427e5a, _0x5e2fe2) => {
  const _0x419e5b = _0x4522c5;
  const _0x59fbbf = _0x170f1d;
  try {
    if (!_0x5e2fe2) {
      return _0x427e5a[_0x59fbbf(732)](_0x59fbbf(741) + prefix + _0x59fbbf(470));
    }
    let [_0x125e35, _0x22cec1] = _0x5e2fe2[_0x59fbbf(524)](":")[_0x59fbbf(704)](_0x12c804 => _0x12c804[_0x59fbbf(463)]());
    if (!_0x125e35 || !_0x22cec1) {
      return _0x427e5a[_0x59fbbf(732)](_0x59fbbf(741) + prefix + _0x59fbbf(419) + (_0x125e35 || _0x59fbbf(391)) + ": " + (_0x22cec1 || _0x419e5b(516)) + "!*");
    }
    let _0x46056f = await db[_0x419e5b(724)]();
    filter = _0x46056f[_0x419e5b(338)] || {};
    filter[_0x125e35] = _0x22cec1;
    _0x46056f.filter = {
      ...filter
    };
    _0x46056f = await db[_0x59fbbf(768)](_0x46056f);
    if (_0x46056f) {
      _0x427e5a[_0x59fbbf(732)](_0x59fbbf(364) + _0x125e35 + _0x59fbbf(670));
    } else {
      _0x427e5a[_0x59fbbf(732)](_0x419e5b(380));
    }
  } catch (_0x45fc0e) {
    _0x427e5a[_0x419e5b(502)](_0x45fc0e + _0x59fbbf(554), _0x45fc0e, _0x59fbbf(313));
  }
});
smd({
  pattern: _0x170f1d(599),
  category: _0x170f1d(652),
  desc: _0x170f1d(801),
  use: _0x170f1d(871),
  usage: _0x170f1d(857),
  fromMe: true
}, async (_0xf001d5, _0x1918e3) => {
  const _0x2260b7 = _0x4522c5;
  const _0x3671e0 = _0x170f1d;
  try {
    if (!_0x1918e3) {
      return _0xf001d5[_0x3671e0(732)](_0x2260b7(485) + prefix + _0x3671e0(781));
    }
    let _0xf0f376 = await db.get();
    filter = _0xf0f376[_0x3671e0(560)] || {};
    if (!filter[_0x1918e3]) {
      return _0xf001d5[_0x3671e0(543)](_0x3671e0(610));
    }
    delete filter[_0x1918e3];
    _0xf0f376.filter = {
      ...filter
    };
    _0xf0f376 = await db[_0x3671e0(768)](_0xf0f376);
    if (_0xf0f376) {
      _0xf001d5[_0x2260b7(514)](_0x3671e0(475) + _0x1918e3 + _0x2260b7(643));
    } else {
      _0xf001d5[_0x3671e0(543)]("*_Request denied!_*");
    }
  } catch (_0x4efe3e) {
    _0xf001d5[_0x2260b7(502)](_0x4efe3e + _0x2260b7(187), _0x4efe3e, _0x3671e0(437));
  }
});
smd({
  pattern: _0x170f1d(310),
  category: _0x4522c5(628),
  desc: _0x4522c5(388),
  use: _0x170f1d(871),
  usage: _0x170f1d(854),
  fromMe: true
}, async _0x101bf0 => {
  const _0x46f755 = _0x4522c5;
  const _0x38576d = _0x170f1d;
  try {
    let _0x4eb5b2 = await db[_0x38576d(443)]();
    filter = _0x4eb5b2[_0x38576d(560)] || {};
    let _0xbc8bba = Object[_0x38576d(680)](filter)[_0x38576d(704)](([_0x3f0270, _0x1be24c]) => _0x3f0270 + _0x38576d(592) + _0x1be24c)[_0x38576d(553)]("\n");
    if (_0xbc8bba) {
      _0x101bf0[_0x46f755(514)](_0x46f755(335) + _0xbc8bba);
    } else {
      _0x101bf0[_0x38576d(543)](_0x38576d(825));
    }
  } catch (_0x4fc692) {
    _0x101bf0[_0x46f755(502)](_0x4fc692 + _0x46f755(692), _0x4fc692, false);
  }
});
smd({
  on: _0x170f1d(839)
}, async (_0x1be09e, _0x4d2206) => {
  const _0x312159 = _0x170f1d;
  try {
    if (!filter) {
      let _0x5901d8 = await db[_0x312159(443)]();
      filter = _0x5901d8[_0x312159(560)] || {};
    }
    if (filter[_0x4d2206]) {
      _0x1be09e[_0x312159(543)](filter[_0x4d2206]);
    }
  } catch (_0xdecdc6) {
    console[_0x312159(659)](_0xdecdc6);
  }
});
function _0x57fc() {
  const _0x5298ba = _0x4522c5;
  const _0x3e1237 = [_0x5298ba(344), "*Given Word not set to any filter!*", _0x5298ba(119), _0x5298ba(192), _0x5298ba(558), _0x5298ba(433), _0x5298ba(543), "198530YwUiMP", _0x5298ba(260), _0x5298ba(218), _0x5298ba(633), _0x5298ba(733), _0x5298ba(431), "\n[ERROR]:", _0x5298ba(133), _0x5298ba(273), _0x5298ba(624), _0x5298ba(190), "https://favqs.com/api/qotd", "utf-8", _0x5298ba(606), _0x5298ba(468), _0x5298ba(722), " ```To add user name,```\n &uptime: ```To add Uptime of bot,```\n &line : ```To add random pickup Line,```\n &quote: ```To add random quote with auther,```", _0x5298ba(151), "is bot alive??", "\n  \n  Also update status: *", _0x5298ba(205), "application/pdf", _0x5298ba(441), "ERROR Context INFO WITH MENU MENTION\t", "relayMessage", _0x5298ba(149), _0x5298ba(140), _0x5298ba(297), "get list of bgm", _0x5298ba(523), _0x5298ba(318), _0x5298ba(585), _0x5298ba(731), "_ removed from BGM.*", _0x5298ba(497), _0x5298ba(419), _0x5298ba(628), _0x5298ba(613), _0x5298ba(398), ": @", "./temp/", _0x5298ba(690), "participant", _0x5298ba(173), _0x5298ba(162), _0x5298ba(314), "close", _0x5298ba(374), _0x5298ba(239), "main", "file", _0x5298ba(174), _0x5298ba(535), _0x5298ba(683), _0x5298ba(348), _0x5298ba(228), _0x5298ba(349), _0x5298ba(131), "Disapproves user for pm.", _0x5298ba(405), _0x5298ba(568), _0x5298ba(197), _0x5298ba(650), _0x5298ba(622), _0x5298ba(539), "LOGGED OUT!", "promisify", _0x5298ba(508), "error in client.contextInfo() : ", _0x5298ba(224), _0x5298ba(705), "child_process", _0x5298ba(420), _0x5298ba(343), _0x5298ba(160), _0x5298ba(602), _0x5298ba(574), _0x5298ba(263), _0x5298ba(223), _0x5298ba(277), _0x5298ba(641), "lastIndexOf", _0x5298ba(298), _0x5298ba(531), _0x5298ba(645), _0x5298ba(476), "permit", _0x5298ba(123), _0x5298ba(183), _0x5298ba(165), _0x5298ba(390), _0x5298ba(428), _0x5298ba(608), _0x5298ba(352), _0x5298ba(701), _0x5298ba(715), _0x5298ba(157), _0x5298ba(475), _0x5298ba(330), _0x5298ba(286), _0x5298ba(138), _0x5298ba(410), _0x5298ba(684), _0x5298ba(213), _0x5298ba(232), _0x5298ba(631), "document", _0x5298ba(647), _0x5298ba(578), _0x5298ba(145), _0x5298ba(519), _0x5298ba(377), _0x5298ba(237), _0x5298ba(284), _0x5298ba(572), _0x5298ba(620), "send", _0x5298ba(434), _0x5298ba(303), _0x5298ba(198), _0x5298ba(357), _0x5298ba(583), _0x5298ba(509), _0x5298ba(492), _0x5298ba(252), _0x5298ba(481), "readViewOnce", _0x5298ba(212), _0x5298ba(347), "17863688449@s.whatsapp.net", "forward", _0x5298ba(435), _0x5298ba(557), "Shows a list of disable cmds for rent bot users!", _0x5298ba(659), _0x5298ba(444), _0x5298ba(666), _0x5298ba(525), _0x5298ba(323), _0x5298ba(156), _0x5298ba(210), _0x5298ba(682), _0x5298ba(467), _0x5298ba(225), "suhail", _0x5298ba(135), _0x5298ba(667), _0x5298ba(288), _0x5298ba(515), _0x5298ba(305), _0x5298ba(152), "binary", _0x5298ba(182), _0x5298ba(488), "BAFDGM539SUHAILMDOFFICIAL", _0x5298ba(295), _0x5298ba(393), "../lib/plugins", _0x5298ba(199), _0x5298ba(630), _0x5298ba(588), _0x5298ba(697), _0x5298ba(301), "store.json", _0x5298ba(550), _0x5298ba(473), _0x5298ba(310), _0x5298ba(219), _0x5298ba(524), _0x5298ba(409), _0x5298ba(311), _0x5298ba(471), _0x5298ba(300), _0x5298ba(365), _0x5298ba(400), _0x5298ba(396), _0x5298ba(634), _0x5298ba(728), _0x5298ba(339), _0x5298ba(355), _0x5298ba(126), _0x5298ba(247), _0x5298ba(661), _0x5298ba(717), "' already disabled for rented users!*", _0x5298ba(452), _0x5298ba(612), "../lib", _0x5298ba(372), _0x5298ba(729), _0x5298ba(269), _0x5298ba(478), _0x5298ba(141), "unlinkSync", _0x5298ba(221), _0x5298ba(411), _0x5298ba(552), "schedule", _0x5298ba(276), _0x5298ba(657), "pmpermit", "node-cron", _0x5298ba(361), "*Request Denied!*", _0x5298ba(596), "mute", "rentcmdon", _0x5298ba(129), _0x5298ba(499), _0x5298ba(238), _0x5298ba(638), _0x5298ba(278), "time", _0x5298ba(207), _0x5298ba(440), "rentbot qr/pair |", _0x5298ba(664), _0x5298ba(614), _0x5298ba(534), _0x5298ba(719), _0x5298ba(700), _0x5298ba(654), _0x5298ba(321), _0x5298ba(518), _0x5298ba(378), _0x5298ba(604), _0x5298ba(527), _0x5298ba(712), _0x5298ba(474), _0x5298ba(498), _0x5298ba(249), _0x5298ba(502), _0x5298ba(636), _0x5298ba(642), "PM-PERMIT", _0x5298ba(248), _0x5298ba(437), _0x5298ba(695), "get a list of all filter messages with words, That already set in filter text!", "block", _0x5298ba(703), "stop filter message to specific word, That already set in filter text!", "*[Disbled command lists for rent Users]*\n", _0x5298ba(487), _0x5298ba(215), _0x5298ba(573), _0x5298ba(542), _0x5298ba(582), "disablepm", "viewOnceMessageV2", _0x5298ba(280), _0x5298ba(559), _0x5298ba(186), _0x5298ba(214), _0x5298ba(181), _0x5298ba(337), ".mkv", _0x5298ba(532), _0x5298ba(275), _0x5298ba(287), "\\$&", "sendImage", _0x5298ba(593), _0x5298ba(389), "silent", _0x5298ba(639), _0x5298ba(685), _0x5298ba(726), _0x5298ba(730), _0x5298ba(637), _0x5298ba(462), ".gif", "floor", _0x5298ba(125), _0x5298ba(489), "recmd", _0x5298ba(226), _0x5298ba(336), _0x5298ba(600), _0x5298ba(329), "readmessage", _0x5298ba(117), _0x5298ba(520), _0x5298ba(495), _0x5298ba(459), _0x5298ba(271), _0x5298ba(254), _0x5298ba(313), _0x5298ba(143), _0x5298ba(580), _0x5298ba(465), _0x5298ba(270), _0x5298ba(591), _0x5298ba(540), "mention found !", _0x5298ba(222), _0x5298ba(544), "photo", "ephemeralMessage", _0x5298ba(282), _0x5298ba(384), "delbgm", _0x5298ba(617), _0x5298ba(172), _0x5298ba(364), "Rent [Suhail_MD] by [", _0x5298ba(455), _0x5298ba(626), "*RENT BOT Succesfully Connected!*\n*Now @", "startsWith", _0x5298ba(629), "matchAll", _0x5298ba(391), _0x5298ba(438), "live", _0x5298ba(170), _0x5298ba(235), _0x5298ba(530), _0x5298ba(142), _0x5298ba(625), _0x5298ba(229), _0x5298ba(266), _0x5298ba(356), "https", _0x5298ba(651), _0x5298ba(627), _0x5298ba(208), "* üî∞\n*Pm-Permit action of ", _0x5298ba(325), "Enable cmds for rent bot users!", "mention info| get | text with url to update mention!*", _0x5298ba(132), _0x5298ba(363), " currently AFK.\nReason: ", _0x5298ba(723), "@s.whatsapp.net", _0x5298ba(283), _0x5298ba(281), _0x5298ba(469), "image/jpeg", _0x5298ba(426), _0x5298ba(180), _0x5298ba(350), _0x5298ba(265), _0x5298ba(510), _0x5298ba(490), _0x5298ba(383), _0x5298ba(399), "*_Permitted ", "timedOut", _0x5298ba(220), _0x5298ba(404), _0x5298ba(609), _0x5298ba(553), _0x5298ba(561), _0x5298ba(385), _0x5298ba(450), _0x5298ba(439), _0x5298ba(331), "metadata", _0x5298ba(454), _0x5298ba(655), _0x5298ba(255), "0@s.whatsapp.net", _0x5298ba(456), _0x5298ba(453), "_ERROR!_", _0x5298ba(513), _0x5298ba(423), _0x5298ba(709), "*RENT BOT Not Connected!*\n*REASON: qr code Expire!*:", _0x5298ba(319), ".png", "senderNum", _0x5298ba(576), _0x5298ba(429), _0x5298ba(503), _0x5298ba(309), _0x5298ba(547), _0x5298ba(203), _0x5298ba(562), _0x5298ba(501), "unlink", _0x5298ba(442), _0x5298ba(155), _0x5298ba(202), "catch", _0x5298ba(458), _0x5298ba(555), "requestPairingCode", _0x5298ba(663), _0x5298ba(159), _0x5298ba(449), "categories", _0x5298ba(545), "*Please reply/mention User(who have rent bot) to stop rented bot!*", _0x5298ba(367), _0x5298ba(584), _0x5298ba(369), _0x5298ba(618), _0x5298ba(706), _0x5298ba(375), _0x5298ba(470), _0x5298ba(457), _0x5298ba(675), _0x5298ba(621), _0x5298ba(184), _0x5298ba(598), "*There's no user who has rented 'suhail md'!*", _0x5298ba(306), _0x5298ba(512), _0x5298ba(397), "findIndex", "filter ", _0x5298ba(446), _0x5298ba(324), _0x5298ba(408), " have permission for pm already._*", _0x5298ba(414), _0x5298ba(727), _0x5298ba(725), _0x5298ba(707), _0x5298ba(354), _0x5298ba(353), _0x5298ba(610), _0x5298ba(168), "server", _0x5298ba(308), _0x5298ba(577), _0x5298ba(406), "@whiskeysockets/baileys", _0x5298ba(662), "accept", _0x5298ba(491), _0x5298ba(686), _0x5298ba(351), _0x5298ba(194), _0x5298ba(724), "bot", "sendUi", _0x5298ba(507), _0x5298ba(448), _0x5298ba(257), _0x5298ba(196), _0x5298ba(603), _0x5298ba(244), _0x5298ba(569), _0x5298ba(154), _0x5298ba(299), _0x5298ba(382), "groupSettingUpdate", _0x5298ba(494), _0x5298ba(394), _0x5298ba(496), _0x5298ba(451), _0x5298ba(241), _0x5298ba(718), "trim", _0x5298ba(251), _0x5298ba(720), _0x5298ba(693), "axios", "./convertedVideo.mp4", "473jJHBkG", _0x5298ba(579), _0x5298ba(293), _0x5298ba(464), _0x5298ba(332), _0x5298ba(567), "*_Filter '", "ERROR IN AUTO MUTE_UNMUTE\n", _0x5298ba(124), _0x5298ba(177), "packname", _0x5298ba(362), _0x5298ba(188), "true", _0x5298ba(402), _0x5298ba(526), _0x5298ba(359), _0x5298ba(460), _0x5298ba(732), _0x5298ba(640), _0x5298ba(607), "MsgsInLog", _0x5298ba(373), _0x5298ba(504), _0x5298ba(407), _0x5298ba(296), _0x5298ba(677), "verifiedName", _0x5298ba(360), _0x5298ba(147), _0x5298ba(403), _0x5298ba(425), _0x5298ba(130), _0x5298ba(333), _0x5298ba(587), _0x5298ba(358), _0x5298ba(536), "offer", _0x5298ba(261), _0x5298ba(477), "function", "Enterred----------------", _0x5298ba(134), _0x5298ba(268), "‚îå‚îÄ‚îÄ‚îÄ‚å© *", _0x5298ba(560), _0x5298ba(565), _0x5298ba(538), _0x5298ba(678), _0x5298ba(427), "parse", _0x5298ba(376), _0x5298ba(521), _0x5298ba(234), _0x5298ba(656), "split", _0x5298ba(178), _0x5298ba(120), _0x5298ba(206), _0x5298ba(371), _0x5298ba(676), "../lib/plugins.js", _0x5298ba(291), _0x5298ba(648), _0x5298ba(153), _0x5298ba(673), _0x5298ba(317), _0x5298ba(302), _0x5298ba(483), "*There's no user has rented 'suhail md'!*", _0x5298ba(505), _0x5298ba(204), _0x5298ba(681), _0x5298ba(342), _0x5298ba(514), _0x5298ba(571), _0x5298ba(443), "RENT BOT :  Connection closed, reconnecting....", _0x5298ba(616), _0x5298ba(605), "decodeJid", "rentdisable", _0x5298ba(345), "qrcode", _0x5298ba(463), "\n\nCommand:filter", _0x5298ba(118), _0x5298ba(466), _0x5298ba(679), "quote", _0x5298ba(370), "filter", "toLowerCase", _0x5298ba(581), _0x5298ba(136), _0x5298ba(150), _0x5298ba(243), _0x5298ba(671), _0x5298ba(658), _0x5298ba(164), _0x5298ba(699), _0x5298ba(340), _0x5298ba(668), _0x5298ba(711), _0x5298ba(272), _0x5298ba(209), _0x5298ba(506), _0x5298ba(381), "audioMessage", "child", _0x5298ba(171), "./exif.js", _0x5298ba(646), _0x5298ba(649), _0x5298ba(137), _0x5298ba(714), "autobio", "allow or rent your bot to someone!", _0x5298ba(262), _0x5298ba(144), "github", _0x5298ba(665), _0x5298ba(315), _0x5298ba(500), _0x5298ba(594), "json", "*/2 * * * *", _0x5298ba(599), _0x5298ba(200), _0x5298ba(387), "stop", "content", _0x5298ba(484), _0x5298ba(698), _0x5298ba(590), _0x5298ba(216), _0x5298ba(334), _0x5298ba(689), _0x5298ba(566), "Uhh Please give Bgm Song NAme"];
  _0x57fc = function () {
    return _0x3e1237;
  };
  return _0x57fc();
}
let afk = false;
smd({
  pattern: _0x170f1d(588),
  desc: _0x170f1d(667),
  category: _0x170f1d(652)
}, async (_0x2d1026, _0x5bf38e) => {
  const _0xffa3dd = _0x4522c5;
  const _0x511fe4 = _0x170f1d;
  try {
    let _0x4cd749 = await db[_0x511fe4(443)]();
    afk = _0x4cd749.afk || {
      users: {}
    };
    if (!_0x5bf38e) {
      return _0x2d1026[_0x511fe4(543)]((_0xffa3dd(424) + prefix + _0x511fe4(778) + prefix + _0x511fe4(491))[_0xffa3dd(672)]());
    }
    if (_0x5bf38e === _0xffa3dd(724) && afk[_0x2d1026[_0xffa3dd(700)]]) {
      return _0x2d1026[_0x511fe4(543)](afk[_0x2d1026[_0xffa3dd(700)]][_0x511fe4(338)]);
    }
    afk[_0x2d1026[_0x511fe4(836)]] = {
      reason: _0x5bf38e,
      lastseen: new Date()
    };
    _0x4cd749[_0x511fe4(588)] = {
      ...afk
    };
    _0x4cd749 = await db[_0x511fe4(768)](_0x4cd749);
    if (_0x4cd749) {
      let _0xd05bd2 = ("@" + _0x2d1026[_0x511fe4(836)][_0x511fe4(524)]("@")[0] + _0x511fe4(339) + afk[_0x2d1026[_0x511fe4(836)]][_0xffa3dd(363)][_0x511fe4(782)](_0x511fe4(540), _0x511fe4(846) + getTimeDifference(afk[_0x2d1026[_0x511fe4(836)]][_0x511fe4(835)]) + "\n"))[_0x511fe4(463)]();
      await sendWelcome(_0x2d1026, _0xd05bd2, _0x2d1026, _0x2d1026[_0x511fe4(836)]);
    } else {
      _0x2d1026[_0xffa3dd(514)](_0x511fe4(819));
    }
  } catch (_0x901cbe) {
    _0x2d1026[_0x511fe4(847)](_0x901cbe + _0x511fe4(413), _0x901cbe);
  }
});
smd({
  pattern: _0x170f1d(617),
  desc: _0x170f1d(487),
  category: _0x4522c5(628)
}, async _0x406f37 => {
  const _0x1dcb8d = _0x4522c5;
  const _0x4ca56c = _0x170f1d;
  try {
    let _0x107167 = await db[_0x4ca56c(443)]();
    afk = _0x107167[_0x4ca56c(588)] || {};
    if (!afk[_0x406f37[_0x4ca56c(836)]]) {
      return _0x406f37[_0x4ca56c(543)](_0x4ca56c(368));
    }
    delete afk[_0x406f37[_0x1dcb8d(700)]];
    _0x107167[_0x4ca56c(588)] = {
      ...afk
    };
    _0x107167 = await db[_0x4ca56c(768)](_0x107167);
    if (_0x107167) {
      await _0x406f37[_0x4ca56c(543)](_0x4ca56c(440));
    } else {
      _0x406f37[_0x4ca56c(543)](_0x4ca56c(819));
    }
  } catch (_0x43f6fe) {
    _0x406f37[_0x1dcb8d(502)](_0x43f6fe + _0x4ca56c(464), _0x43f6fe, _0x1dcb8d(395));
  }
});
let txt = {
  "2": _0x4522c5(294),
  "3": "*Stop spamming!*"
};
function getTimeDifference(_0x33fae6) {
  const _0x414cfa = _0x4522c5;
  const _0x1f4812 = _0x170f1d;
  const _0x257dc1 = new Date(_0x33fae6);
  const _0x57e00d = new Date();
  const _0x41d515 = _0x57e00d - _0x257dc1;
  const _0x8a7cff = Math[_0x1f4812(888)](_0x41d515 / 86400000);
  const _0x428db0 = Math[_0x1f4812(888)](_0x41d515 % 86400000 / 3600000);
  const _0x52f06f = Math[_0x1f4812(888)](_0x41d515 % 3600000 / 60000);
  return _0x414cfa(533) + (_0x8a7cff || 0) + _0x1f4812(832) + (_0x428db0 || 0) + _0x1f4812(679) + (_0x52f06f || 0);
}
smd({
  on: _0x170f1d(665)
}, async _0x3464f5 => {
  const _0x3830fb = _0x4522c5;
  const _0x1c08f6 = _0x170f1d;
  if (_0x3464f5[_0x3830fb(631)] || _0x3464f5[_0x3830fb(529)]) {
    return;
  }
  try {
    if (!afk) {
      let _0x5fe54a = await db[_0x1c08f6(443)]();
      afk = _0x5fe54a[_0x1c08f6(588)] || {
        users: []
      };
    }
    let _0x1e981c = _0x3464f5[_0x1c08f6(387)] && _0x3464f5[_0x1c08f6(845)][_0x1c08f6(721)] ? true : false;
    let _0x55fc0b = _0x3464f5[_0x1c08f6(765)][0] ? [..._0x3464f5[_0x1c08f6(765)]] : [];
    if (_0x3464f5[_0x1c08f6(845)]) {
      _0x55fc0b[_0x1c08f6(723)](_0x3464f5[_0x1c08f6(845)][_0x1c08f6(836)]);
    }
    for (let _0xd17177 = 0; _0xd17177 < _0x55fc0b.length; _0xd17177++) {
      if (afk[_0x55fc0b[_0xd17177]] && _0x3464f5[_0x1c08f6(836)] !== _0x55fc0b[_0xd17177]) {
        if (!afk[_0x55fc0b[_0xd17177]][_0x3830fb(362)][_0x3464f5[_0x1c08f6(836)]]) {
          afk[_0x55fc0b[_0xd17177]][_0x1c08f6(480)][_0x3464f5[_0x1c08f6(836)]] = 0;
        }
        afk[_0x55fc0b[_0xd17177]][_0x3830fb(362)][_0x3464f5[_0x1c08f6(836)]]++;
        if (afk[_0x55fc0b[_0xd17177]][_0x3830fb(362)][_0x3464f5[_0x1c08f6(836)]] > 3) {
          continue;
        }
        let _0x501e15 = txt[afk[_0x55fc0b[_0xd17177]][_0x1c08f6(480)][_0x3464f5[_0x3830fb(700)]]];
        let _0x17187e = ((_0x501e15 ? _0x501e15 : "") + _0x3830fb(652) + _0x55fc0b[_0xd17177][_0x1c08f6(524)]("@")[0] + " currently AFK.*\n*Reason:* " + afk[_0x55fc0b[_0xd17177]][_0x1c08f6(338)][_0x1c08f6(782)](_0x1c08f6(540), "\n*Lastseen:* " + getTimeDifference(afk[_0x55fc0b[_0xd17177]][_0x1c08f6(835)]) + "\n"))[_0x1c08f6(463)]();
        await sendWelcome(_0x3464f5, _0x17187e, _0x3464f5, _0x55fc0b[_0xd17177]);
      }
    }
  } catch (_0x1a7fd6) {
    console[_0x3830fb(173)](_0x1c08f6(576), _0x1a7fd6);
  }
});
cmd({
  pattern: _0x4522c5(691),
  category: _0x170f1d(520),
  desc: _0x170f1d(634)
}, async (_0xfffe3c, _0x16febc, {
  isCreator: _0x430387
}) => {
  const _0x18be1a = _0x4522c5;
  const _0x53fbf1 = _0x170f1d;
  let _0x4f77b0 = _0x16febc;
  let _0x2d5041 = _0x18be1a(211);
  let _0xe2083 = "";
  let _0x346c1e = false;
  let _0x2c756c = false;
  if (_0x430387 && _0x16febc != "") {
    let _0x3de45e = (await bot_[_0x18be1a(295)]({
      id: _0x53fbf1(340) + _0xfffe3c[_0x53fbf1(908)]
    })) || (await bot_[_0x53fbf1(556)]({
      id: _0x53fbf1(340) + _0xfffe3c[_0x18be1a(591)]
    }));
    if (_0x16febc[_0x53fbf1(315)](_0x18be1a(724))) {
      return _0xfffe3c[_0x18be1a(514)](_0x3de45e[_0x53fbf1(536)]);
    }
    if (_0x16febc[_0x53fbf1(561)]()[_0x18be1a(158)](_0x53fbf1(696)) || _0x16febc[_0x53fbf1(561)]()[_0x18be1a(158)](_0x18be1a(708))) {
      let _0x52b75d = _0x53fbf1(349) + _0x53fbf1(632) + _0x18be1a(240) + _0x53fbf1(406) + _0x53fbf1(885) + _0x18be1a(669) + "\n\n*Alive Message With Url And All Keywords*\n" + _0x18be1a(660);
      return await _0xfffe3c[_0x53fbf1(444)][_0x53fbf1(325)](_0xfffe3c[_0x18be1a(590)], {
        image: {
          url: await botpic()
        },
        caption: _0x52b75d + Config.caption
      }, {
        quoted: _0xfffe3c
      });
    }
    const _0x3fd49b = /(https?:\/\/\S+)/gi;
    const _0x6fec87 = [_0x53fbf1(829), _0x18be1a(232), _0x53fbf1(378)];
    const _0x5f2e47 = [_0x53fbf1(427), _0x53fbf1(784), _0x53fbf1(545), _0x53fbf1(872), _0x53fbf1(887)];
    let _0x46c52b = _0x16febc[_0x53fbf1(769)](_0x3fd49b) || false;
    if (_0x46c52b) {
      let _0xe8c9ee = 0;
      while (_0xe8c9ee < _0x46c52b[_0x53fbf1(447)] && !_0x346c1e && !_0x2c756c) {
        _0xe2083 = _0x46c52b[_0xe8c9ee];
        const _0x42d182 = _0xe2083[_0x53fbf1(757)](_0xe2083[_0x53fbf1(697)]("."))[_0x18be1a(619)]();
        if (_0x6fec87[_0x53fbf1(889)](_0x42d182)) {
          _0x346c1e = true;
          _0x2c756c = false;
        } else if (_0x5f2e47[_0x18be1a(125)](_0x42d182)) {
          _0x2c756c = true;
          _0x346c1e = false;
        } else {
          console.log(_0x53fbf1(677) + _0xe2083);
        }
        _0xe8c9ee++;
      }
    }
    if (_0x2c756c || _0x346c1e) {
      _0x16febc = _0x16febc[_0x53fbf1(782)](_0xe2083, "");
    }
    await bot_[_0x53fbf1(683)]({
      id: _0x53fbf1(340) + _0xfffe3c[_0x53fbf1(908)]
    }, {
      alive_text: _0x16febc,
      alive_get: _0x4f77b0,
      alive_url: _0xe2083,
      alive_image: _0x346c1e,
      alive_video: _0x2c756c
    });
  }
  var _0x5860b2 = (await bot_[_0x53fbf1(771)]({
    id: _0x53fbf1(340) + _0xfffe3c[_0x53fbf1(908)]
  })) || (await bot_[_0x18be1a(466)]({
    id: _0x53fbf1(340) + _0xfffe3c[_0x53fbf1(908)]
  }));
  _0x2d5041 = _0x5860b2[_0x53fbf1(398)] ? _0x5860b2[_0x18be1a(449)] : _0x2d5041;
  if (_0x2d5041[_0x53fbf1(889)](_0x18be1a(531))) {
    var _0x403f9e = await axios[_0x53fbf1(443)](_0x53fbf1(627));
    let _0x20fd13 = _0x403f9e[_0x53fbf1(547)][_0x53fbf1(558)][_0x53fbf1(452)] + " By " + _0x403f9e[_0x53fbf1(547)][_0x53fbf1(558)][_0x53fbf1(744)];
    _0x2d5041 = _0x2d5041[_0x53fbf1(782)](_0x53fbf1(699), _0x20fd13);
  }
  _0x2d5041 = _0x2d5041[_0x18be1a(310)](_0x53fbf1(373), runtime(process[_0x53fbf1(647)]()))[_0x18be1a(310)](_0x53fbf1(715), _0xfffe3c[_0x53fbf1(613)])[_0x53fbf1(782)](_0x53fbf1(834), (await fetchJson(_0x53fbf1(609)))[_0x53fbf1(789)])[_0x18be1a(310)](_0x53fbf1(694), _0xfffe3c[_0x53fbf1(828)])[_0x53fbf1(782)](_0x53fbf1(694), _0xfffe3c[_0x53fbf1(641)]);
  _0x346c1e = _0x5860b2[_0x53fbf1(508)] || false;
  _0x2c756c = _0x5860b2[_0x53fbf1(668)] || false;
  _0xe2083 = _0x5860b2[_0x53fbf1(566)] || (await botpic());
  const _0x15b8b0 = _0x346c1e ? {
    image: {
      url: _0xe2083
    },
    caption: _0x2d5041
  } : _0x2c756c ? {
    video: {
      url: _0xe2083
    },
    gifPlayback: true,
    caption: _0x2d5041
  } : {
    text: _0x2d5041
  };
  return _0xfffe3c[_0x53fbf1(444)][_0x53fbf1(325)](_0xfffe3c[_0x53fbf1(603)], _0x15b8b0, {
    quoted: _0xfffe3c
  });
});
function _0x4bb2(_0x5d0772, _0x5497f1) {
  const _0x3d6068 = _0x57fc();
  _0x4bb2 = function (_0x51a02e, _0x3051e2) {
    _0x51a02e = _0x51a02e - 310;
    let _0x21c2eb = _0x3d6068[_0x51a02e];
    return _0x21c2eb;
  };
  return _0x4bb2(_0x5d0772, _0x5497f1);
}
async function convertAudioToBlackScreenVideo(_0x4058ba, _0x4a6ce2) {
  const _0x80018d = _0x4522c5;
  const _0x17c0a1 = _0x170f1d;
  try {
    try {
      fs[_0x80018d(632)](_0x4a6ce2);
    } catch (_0x1dd020) {}
    const _0x3ec1cb = _0x17c0a1(777) + _0x4058ba;
    const {
      stdout: _0x9c71ce
    } = await exec(_0x3ec1cb);
    const _0x5b2ad2 = parseFloat(_0x9c71ce);
    try {
      fs[_0x17c0a1(809)](_0x17c0a1(863));
    } catch (_0x47dd53) {}
    const _0x586f6f = _0x17c0a1(529) + _0x5b2ad2 + _0x17c0a1(357);
    await exec(_0x586f6f);
    const _0x27cc71 = _0x17c0a1(826) + _0x4058ba + _0x17c0a1(840) + _0x4a6ce2;
    await exec(_0x27cc71);
    console.log(_0x17c0a1(497));
    return {
      result: true
    };
  } catch (_0x5658c8) {
    console[_0x80018d(502)](_0x80018d(694), _0x5658c8);
    return {
      result: false
    };
  }
}
smd({
  pattern: _0x4522c5(285),
  alias: [_0x170f1d(881)],
  desc: _0x170f1d(380),
  category: _0x170f1d(556)
}, async (_0x45114f, _0xe29a40) => {
  const _0x52c8b8 = _0x4522c5;
  const _0x50935c = _0x170f1d;
  try {
    if (!_0x45114f[_0x50935c(387)]) {
      return await _0x45114f[_0x50935c(543)](_0x50935c(805));
    }
    let _0x3f0f74 = "";
    if (_0x45114f[_0x50935c(387)][_0x50935c(344)] == _0x50935c(577)) {
      let _0x59ca2d = await _0x45114f[_0x50935c(444)][_0x52c8b8(705)](_0x45114f[_0x50935c(387)]);
      let _0xc8119e = await convertAudioToBlackScreenVideo(_0x59ca2d, _0x50935c(374));
      if (_0xc8119e[_0x50935c(735)]) {
        _0x3f0f74 = _0x50935c(374);
        let _0xd2c035 = await TelegraPh(_0x3f0f74);
        _0x45114f[_0x52c8b8(327)](_0x3f0f74, {
          caption: util[_0x50935c(804)](_0xd2c035)
        }, _0x52c8b8(368), m);
      }
    }
  } catch (_0x30a77c) {
    await _0x45114f[_0x50935c(847)](_0x30a77c + _0x50935c(621), _0x30a77c, _0x50935c(389));
  }
});
smd({
  pattern: _0x170f1d(724),
  desc: _0x4522c5(193),
  fromMe: true,
  category: _0x170f1d(520)
}, async (_0x227b38, _0x4382dd) => {
  const _0x3fa9f0 = _0x4522c5;
  const _0x2bcc8d = _0x170f1d;
  try {
    let _0x2b3344 = (await bot_[_0x2bcc8d(771)]({
      id: _0x2bcc8d(340) + _0x227b38[_0x2bcc8d(908)]
    })) || (await bot_[_0x2bcc8d(556)]({
      id: _0x2bcc8d(340) + _0x227b38[_0x2bcc8d(908)]
    }));
    let _0x30d32e = _0x4382dd[_0x2bcc8d(561)]()[_0x2bcc8d(524)]()[0];
    if (_0x30d32e === "on" || _0x30d32e === _0x2bcc8d(893) || _0x30d32e === _0x2bcc8d(776)) {
      await bot_[_0x3fa9f0(508)]({
        id: _0x2bcc8d(340) + _0x227b38[_0x3fa9f0(591)]
      }, {
        bgm: true
      });
      return await _0x227b38[_0x2bcc8d(543)]("*Bgm Succesfully enabled*");
    } else if (_0x30d32e === _0x2bcc8d(791) || _0x30d32e === _0x2bcc8d(669) || _0x30d32e === _0x2bcc8d(796)) {
      await bot_[_0x2bcc8d(683)]({
        id: _0x2bcc8d(340) + _0x227b38[_0x2bcc8d(908)]
      }, {
        bgm: false
      });
      return await _0x227b38[_0x2bcc8d(543)](_0x3fa9f0(312));
    } else {
      return await _0x227b38[_0x2bcc8d(732)](_0x2bcc8d(439));
    }
  } catch (_0x4445f2) {
    await _0x227b38[_0x2bcc8d(847)](_0x4445f2 + _0x2bcc8d(859), _0x4445f2);
  }
});
smd({
  pattern: _0x170f1d(917),
  fromMe: true,
  desc: _0x170f1d(486),
  category: _0x170f1d(520)
}, async (_0x28dc92, _0x5c3f52) => {
  const _0x3aeea9 = _0x4522c5;
  const _0x2e48c5 = _0x170f1d;
  try {
    if (!_0x5c3f52) {
      return await _0x28dc92[_0x2e48c5(543)](_0x3aeea9(670));
    }
    let _0x294643 = (await bot_[_0x2e48c5(771)]({
      id: _0x3aeea9(723) + _0x28dc92[_0x2e48c5(908)]
    })) || (await bot_.new({
      id: _0x3aeea9(723) + _0x28dc92[_0x2e48c5(908)]
    }));
    let _0x1ca026 = _0x294643[_0x3aeea9(293)];
    if (_0x1ca026[_0x5c3f52]) {
      delete _0x1ca026[_0x5c3f52];
      await bot_[_0x2e48c5(683)]({
        id: _0x2e48c5(340) + _0x28dc92[_0x3aeea9(591)]
      }, {
        bgmarray: _0x1ca026
      });
      return await _0x28dc92[_0x2e48c5(543)](_0x2e48c5(455) + _0x5c3f52 + _0x2e48c5(649));
    } else {
      return await _0x28dc92[_0x2e48c5(543)](_0x2e48c5(521) + _0x5c3f52 + _0x2e48c5(501));
    }
  } catch (_0x3956aa) {
    await _0x28dc92[_0x2e48c5(847)](_0x3956aa + "\n\nCommand: delbgm ", _0x3956aa);
  }
});
smd({
  pattern: _0x4522c5(189),
  alias: [_0x170f1d(792), _0x170f1d(571)],
  fromMe: true,
  desc: _0x170f1d(644),
  category: _0x170f1d(520)
}, async _0x1982e2 => {
  const _0xaef7 = _0x170f1d;
  try {
    let _0x10aa22 = _0xaef7(824);
    let _0x467204 = (await bot_[_0xaef7(771)]({
      id: "bot_" + _0x1982e2[_0xaef7(908)]
    })) || (await bot_[_0xaef7(556)]({
      id: _0xaef7(340) + _0x1982e2[_0xaef7(908)]
    }));
    let _0x209ab1 = _0x467204[_0xaef7(471)];
    console.log(_0xaef7(727), _0x209ab1);
    for (const _0x3f9a29 in _0x209ab1) {
      _0x10aa22 += "*" + _0x3f9a29 + ":* " + _0x209ab1[_0x3f9a29] + " \n";
    }
    return await _0x1982e2[_0xaef7(543)](_0x10aa22 === _0xaef7(824) ? "*_You didn't set any song in bgm yet!!_*" : _0x10aa22);
  } catch (_0xbce57f) {
    await _0x1982e2[_0xaef7(847)](_0xbce57f + _0xaef7(729), _0xbce57f);
  }
});
smd({
  pattern: _0x170f1d(661),
  alias: [_0x4522c5(166), _0x4522c5(292)],
  fromMe: true,
  desc: _0x4522c5(680),
  category: _0x170f1d(520)
}, async (_0x46032b, _0x399ac2) => {
  const _0x23d50c = _0x4522c5;
  const _0x4a5bd9 = _0x170f1d;
  try {
    if (!_0x46032b[_0x4a5bd9(387)]) {
      return await _0x46032b[_0x4a5bd9(543)](_0x4a5bd9(743));
    }
    if (!_0x399ac2) {
      return await _0x46032b[_0x4a5bd9(543)](_0x4a5bd9(608));
    }
    let _0x38cf40 = false;
    let _0x38ea72 = "";
    if (_0x46032b[_0x4a5bd9(387)][_0x4a5bd9(344)] == _0x23d50c(402)) {
      _0x38ea72 = await _0x46032b[_0x4a5bd9(444)][_0x4a5bd9(686)](_0x46032b[_0x23d50c(501)]);
      _0x38cf40 = true;
    } else if (_0x46032b[_0x4a5bd9(387)][_0x23d50c(469)] == _0x4a5bd9(577)) {
      _0x38cf40 = false;
      let _0x3a7942 = await _0x46032b[_0x4a5bd9(444)][_0x4a5bd9(686)](_0x46032b[_0x4a5bd9(387)], _0x4a5bd9(370));
      let _0x19e367 = await convertAudioToBlackScreenVideo(_0x3a7942, _0x4a5bd9(468));
      if (_0x19e367[_0x4a5bd9(735)]) {
        _0x38ea72 = _0x4a5bd9(468);
      }
    } else {
      return await _0x46032b[_0x4a5bd9(543)](_0x23d50c(212));
    }
    if (!_0x38ea72) {
      return await _0x46032b[_0x4a5bd9(543)](_0x4a5bd9(343));
    }
    let _0x6a3731 = await TelegraPh(_0x38ea72);
    let _0xf97fb2 = (await bot_[_0x4a5bd9(771)]({
      id: _0x4a5bd9(340) + _0x46032b[_0x4a5bd9(908)]
    })) || (await bot_[_0x4a5bd9(556)]({
      id: _0x4a5bd9(340) + _0x46032b[_0x23d50c(591)]
    }));
    try {
      let _0x20afab = _0xf97fb2[_0x4a5bd9(471)];
      _0x20afab[_0x399ac2] = _0x6a3731;
      await bot_[_0x4a5bd9(683)]({
        id: _0x4a5bd9(340) + _0x46032b[_0x4a5bd9(908)]
      }, {
        bgmarray: _0x20afab
      });
      return await _0x46032b[_0x4a5bd9(543)](_0x4a5bd9(676) + _0x399ac2 + "*");
    } catch (_0x3bdcd4) {
      return await _0x46032b[_0x4a5bd9(847)](_0x3bdcd4);
    }
  } catch (_0x3a9e95) {
    await _0x46032b[_0x23d50c(502)](_0x3a9e95 + _0x4a5bd9(621), _0x3a9e95);
  }
});
smd({
  pattern: _0x170f1d(816),
  alias: [_0x170f1d(702)],
  fromMe: true,
  desc: _0x4522c5(264),
  category: _0x170f1d(908)
}, async (_0x19f6ee, _0x564a35, {
  cmdName: _0x4fbf7e
}) => {
  const _0x522981 = _0x4522c5;
  const _0x4316c1 = _0x170f1d;
  try {
    let _0x564d22 = (await bot_.findOne({
      id: "bot_" + _0x19f6ee[_0x4316c1(908)]
    })) || (await bot_[_0x4316c1(556)]({
      id: _0x4316c1(340) + _0x19f6ee[_0x4316c1(908)]
    }));
    if (!_0x564a35) {
      return await _0x19f6ee[_0x4316c1(732)](`${_0x4316c1(719) + (_0x564d22[_0x4316c1(702)] ? _0x4316c1(862) : _0x4316c1(324)) + _0x4316c1(806)}${_0x564d22[_0x4316c1(886)]?.[_0x522981(690)]() || "--EMPTY--"}${_0x522981(548)}${prefix + _0x4fbf7e}${_0x4316c1(902)}${prefix + _0x4fbf7e}${_0x522981(289)}${prefix + _0x4fbf7e}${_0x522981(511)}${Config[_0x522981(215)]}`);
    }
    var _0x4c6445 = _0x564a35[_0x4316c1(561)]()[_0x4316c1(463)]();
    const _0x20c552 = _0x4c6445[_0x522981(687)]("|")[0] || "";
    const _0x4f9fe6 = _0x4c6445[_0x4316c1(524)]("|")[1] || "";
    const _0x4ba12c = _0x4f9fe6[_0x522981(158)](_0x4316c1(428)) ? _0x522981(354) : _0x4f9fe6[_0x522981(687)](",")[_0x4316c1(704)](_0x2685e2 => parseInt(_0x2685e2))[_0x4316c1(560)](_0x1c6fa1 => !isNaN(_0x1c6fa1))[_0x4316c1(553)](",");
    let _0x28ba5b = _0x4ba12c ? _0x4ba12c : _0x564d22[_0x4316c1(712)];
    if (_0x20c552[_0x4316c1(315)]("on") || _0x20c552[_0x4316c1(315)](_0x4316c1(893)) || _0x20c552[_0x4316c1(315)](_0x4316c1(776))) {
      if (_0x564d22[_0x4316c1(702)] && _0x564d22[_0x4316c1(712)] === _0x28ba5b) {
        return await _0x19f6ee[_0x522981(327)](_0x4316c1(503));
      }
      let _0xd3aa9d = _0x564d22[_0x4316c1(702)];
      await bot_[_0x522981(508)]({
        id: _0x4316c1(340) + _0x19f6ee[_0x4316c1(908)]
      }, {
        permit: true,
        permit_values: _0x28ba5b
      });
      return await _0x19f6ee[_0x4316c1(732)](_0x522981(688) + (_0xd3aa9d ? _0x4316c1(569) : _0x4316c1(873)) + _0x4316c1(775) + (_0x28ba5b === _0x4316c1(428) ? "everyone" : _0x28ba5b) + _0x4316c1(629));
    } else if (_0x20c552[_0x522981(158)](_0x4316c1(791)) || _0x20c552[_0x4316c1(315)](_0x4316c1(669)) || _0x20c552[_0x4316c1(315)](_0x4316c1(796))) {
      if (!_0x564d22[_0x522981(290)]) {
        return await _0x19f6ee.send(_0x4316c1(481));
      }
      await bot_[_0x4316c1(683)]({
        id: _0x4316c1(340) + _0x19f6ee[_0x4316c1(908)]
      }, {
        permit: false
      });
      return await _0x19f6ee[_0x522981(327)](_0x4316c1(861));
    } else {
      return await _0x19f6ee[_0x4316c1(444)][_0x4316c1(325)](_0x19f6ee[_0x4316c1(603)], {
        text: _0x4316c1(719) + (_0x564d22[_0x522981(290)] ? _0x4316c1(862) : _0x4316c1(324)) + _0x4316c1(528)
      });
    }
  } catch (_0x37cd22) {
    await _0x19f6ee[_0x4316c1(847)](_0x37cd22 + _0x4316c1(709) + _0x4fbf7e + " ", _0x37cd22);
  }
});
smd({
  pattern: _0x4522c5(122),
  alias: ["a"],
  fromMe: true,
  desc: _0x170f1d(783),
  category: _0x170f1d(908)
}, async _0x40fe0e => {
  const _0x586f95 = _0x4522c5;
  const _0x370b0f = _0x170f1d;
  try {
    let _0x19fb46 = (await bot_[_0x370b0f(771)]({
      id: _0x370b0f(340) + _0x40fe0e[_0x586f95(591)]
    })) || (await bot_[_0x370b0f(556)]({
      id: _0x586f95(723) + _0x40fe0e[_0x370b0f(908)]
    }));
    if (!_0x19fb46[_0x586f95(290)]) {
      return await _0x40fe0e[_0x370b0f(325)](_0x40fe0e[_0x586f95(590)], {
        text: _0x370b0f(852)
      });
    }
    if (!_0x40fe0e[_0x370b0f(387)]) {
      return _0x40fe0e[_0x586f95(514)](_0x370b0f(691));
    }
    let _0x200473 = (await userdb[_0x370b0f(771)]({
      id: _0x40fe0e[_0x586f95(501)][_0x370b0f(836)]
    })) || (await userdb[_0x370b0f(556)]({
      id: _0x40fe0e[_0x370b0f(387)][_0x370b0f(836)]
    }));
    if (_0x200473[_0x370b0f(702)] === _0x370b0f(482)) {
      return _0x40fe0e[_0x370b0f(543)]("*_" + (_0x200473[_0x586f95(329)] ? _0x200473[_0x370b0f(895)] : _0x370b0f(908)) + _0x370b0f(423));
    }
    await userdb[_0x370b0f(683)]({
      id: _0x40fe0e[_0x370b0f(387)][_0x370b0f(836)]
    }, {
      permit: _0x370b0f(482),
      times: 0
    });
    return _0x40fe0e[_0x370b0f(732)](_0x370b0f(354) + (_0x200473[_0x586f95(329)] ? _0x200473[_0x586f95(329)] : _0x370b0f(908)) + _0x586f95(584));
  } catch (_0x51bb20) {
    return await _0x40fe0e[_0x370b0f(847)](_0x51bb20 + _0x370b0f(883), _0x51bb20);
  }
});
smd({
  pattern: _0x170f1d(606),
  alias: ["da"],
  fromMe: true,
  desc: _0x170f1d(674),
  category: _0x4522c5(591)
}, async _0x24aa08 => {
  const _0x4dd00d = _0x4522c5;
  const _0x4d5654 = _0x170f1d;
  try {
    let _0x9b63a9 = (await bot_[_0x4dd00d(295)]({
      id: "bot_" + _0x24aa08[_0x4d5654(908)]
    })) || (await bot_[_0x4d5654(556)]({
      id: _0x4dd00d(723) + _0x24aa08[_0x4d5654(908)]
    }));
    if (!_0x9b63a9[_0x4dd00d(290)]) {
      return await _0x24aa08[_0x4d5654(325)](_0x24aa08[_0x4dd00d(590)], {
        text: _0x4d5654(852)
      });
    }
    if (!_0x24aa08[_0x4dd00d(501)]) {
      return _0x24aa08[_0x4dd00d(327)](_0x4d5654(691));
    }
    let _0xaf41b = (await userdb[_0x4d5654(771)]({
      id: _0x24aa08[_0x4d5654(387)][_0x4d5654(836)]
    })) || (await userdb[_0x4dd00d(466)]({
      id: _0x24aa08[_0x4d5654(387)][_0x4d5654(836)]
    }));
    await userdb[_0x4d5654(683)]({
      id: _0x24aa08.quoted[_0x4d5654(836)]
    }, {
      permit: _0x4d5654(842)
    });
    return _0x24aa08[_0x4d5654(732)](_0x4d5654(718) + (_0xaf41b[_0x4d5654(895)] ? _0xaf41b[_0x4d5654(895)] : _0x4d5654(908)) + _0x4d5654(403));
  } catch (_0x4057cc) {
    await _0x24aa08[_0x4d5654(847)](_0x4057cc + _0x4d5654(411), _0x4057cc);
  }
});
smd({
  on: _0x170f1d(839)
}, async (_0x5dbe07, _0x48f095) => {
  const _0x764786 = _0x4522c5;
  const _0x1b73c8 = _0x170f1d;
  try {
    let _0x9b2343 = (await bot_[_0x1b73c8(771)]({
      id: _0x1b73c8(340) + _0x5dbe07[_0x1b73c8(908)]
    })) || (await bot_[_0x764786(466)]({
      id: _0x1b73c8(340) + _0x5dbe07[_0x1b73c8(908)]
    }));
    try {
      if (_0x9b2343 && _0x9b2343[_0x1b73c8(724)] && _0x48f095) {
        for (const _0x249dae in _0x9b2343[_0x1b73c8(471)]) {
          if ((" " + _0x48f095 + " ")[_0x1b73c8(561)]()[_0x764786(125)](_0x249dae + " ")) {
            await _0x5dbe07[_0x764786(625)](_0x5dbe07[_0x1b73c8(512)], {
              audio: {
                url: _0x9b2343[_0x1b73c8(471)][_0x249dae]
              },
              mimetype: _0x1b73c8(911),
              ptt: true,
              waveform: [99, 75, 25, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 25, 50, 75, 99, 75, 50, 25, 0]
            });
          }
        }
      }
    } catch (_0x2532cf) {
      console[_0x764786(173)](_0x1b73c8(894), _0x2532cf);
    }
    if (_0x5dbe07[_0x1b73c8(878)] || _0x5dbe07[_0x1b73c8(836)][_0x1b73c8(315)](_0x1b73c8(906)) || _0x5dbe07[_0x1b73c8(362)] || _0x5dbe07.fromMe) {
      return;
    }
    let _0x12bd21 = (await userdb[_0x1b73c8(771)]({
      id: _0x5dbe07[_0x1b73c8(836)]
    })) || (await userdb[_0x1b73c8(556)]({
      id: _0x5dbe07[_0x1b73c8(836)],
      name: _0x5dbe07[_0x1b73c8(613)]
    }));
    const _0x2b4a69 = _0x9b2343[_0x764786(157)][_0x1b73c8(524)](",");
    const _0x44ad90 = _0x9b2343[_0x1b73c8(712)].includes(_0x1b73c8(428)) ? true : _0x2b4a69[_0x764786(716)](_0x404981 => _0x5dbe07[_0x764786(700)][_0x764786(184)]()[_0x1b73c8(315)](_0x404981));
    if (_0x44ad90 && _0x9b2343.permit && _0x12bd21[_0x1b73c8(702)] === _0x1b73c8(842)) {
      console[_0x1b73c8(659)](_0x1b73c8(510), _0x9b2343[_0x1b73c8(702)]);
      var _0x1e7069;
      if (_0x12bd21[_0x1b73c8(623)] === 0) {
        _0x1e7069 = _0x1b73c8(900) + tlang()[_0x764786(118)] + _0x1b73c8(794) + Config[_0x1b73c8(581)] + _0x764786(185) + Config.caption;
      } else if (_0x12bd21[_0x1b73c8(623)] === 1) {
        _0x1e7069 = _0x1b73c8(731) + (_0x12bd21.times + 1) + _0x764786(195) + (_0x12bd21[_0x1b73c8(623)] == 1 ? _0x1b73c8(737) : "") + "\n\n" + Config[_0x764786(215)];
      } else if (_0x12bd21[_0x1b73c8(623)] === 2) {
        _0x1e7069 = "*Hey " + _0x5dbe07[_0x1b73c8(613)] + ", blocking you for spamming in pm.*\n\n" + Config[_0x1b73c8(860)];
      } else {
        _0x1e7069 = _0x1b73c8(504) + tlang().title + _0x1b73c8(333) + Config[_0x1b73c8(581)] + _0x1b73c8(633) + _0x1e7069 + _0x1b73c8(690) + tlang()[_0x1b73c8(555)] + "*";
      }
      let _0x499e65 = {
        externalAdReply: {
          title: tlang()[_0x1b73c8(555)],
          body: _0x1b73c8(850),
          renderLargerThumbnail: true,
          thumbnail: log0,
          mediaType: 1,
          mediaUrl: gurl,
          sourceUrl: gurl
        }
      };
      let _0x16ba62 = parseInt(_0x12bd21[_0x1b73c8(623)]) + 1;
      await userdb[_0x1b73c8(683)]({
        id: _0x5dbe07.sender
      }, {
        times: _0x16ba62
      });
      await _0x5dbe07[_0x1b73c8(543)](_0x1e7069, {
        contextInfo: _0x499e65
      });
      if (_0x16ba62 >= Config[_0x1b73c8(500)] && !_0x5dbe07[_0x1b73c8(836)][_0x1b73c8(315)](_0x1b73c8(906))) {
        await sleep(1000);
        try {
          await _0x5dbe07[_0x764786(418)][_0x1b73c8(716)](_0x5dbe07[_0x1b73c8(836)], _0x1b73c8(855));
        } catch (_0x38a6cd) {
          await _0x5dbe07.error(_0x38a6cd + _0x1b73c8(890), _0x38a6cd, false);
        }
      }
    }
  } catch (_0x12d634) {}
});
let cron = require(_0x170f1d(817));
let bio = false;
let abioJob = false;
smd({
  pattern: _0x170f1d(585),
  alias: [_0x170f1d(570)],
  desc: _0x170f1d(507),
  fromMe: true,
  category: _0x170f1d(520),
  use: _0x170f1d(541)
}, async (_0x212366, _0x4e860e) => {
  const _0x3977d4 = _0x4522c5;
  const _0x3121ab = _0x170f1d;
  try {
    bio = (await bot_[_0x3121ab(771)]({
      id: _0x3121ab(340) + _0x212366[_0x3121ab(908)]
    })) || (await bot_[_0x3121ab(556)]({
      id: _0x3977d4(723) + _0x212366[_0x3121ab(908)]
    }));
    if (!_0x4e860e) {
      return await _0x212366.send(_0x3121ab(766) + (bio[_0x3121ab(585)] == _0x3121ab(842) ? _0x3121ab(590) + prefix + _0x3121ab(321) : _0x3977d4(167) + (bio[_0x3121ab(585)] == _0x3977d4(146) || bio[_0x3977d4(233)] == "on" ? _0x3977d4(361) : bio[_0x3121ab(585)]) + _0x3977d4(710) + prefix + _0x3121ab(762)) + _0x3121ab(635) + prefix + _0x3121ab(574));
    }
    let _0x106fcc = _0x4e860e[_0x3121ab(561)]()[_0x3121ab(524)](" ")[0][_0x3121ab(463)]();
    if (_0x106fcc === _0x3121ab(791) || _0x106fcc === _0x3121ab(669) || _0x106fcc === "deact") {
      if (abioJob) {
        abioJob[_0x3121ab(599)]();
      }
      if (bio[_0x3977d4(233)] === _0x3121ab(842)) {
        return await _0x212366[_0x3977d4(514)](_0x3121ab(525));
      }
      await bot_[_0x3121ab(683)]({
        id: _0x3121ab(340) + _0x212366[_0x3977d4(591)]
      }, {
        autobio: _0x3121ab(842)
      });
      return await _0x212366[_0x3121ab(543)](_0x3977d4(366));
    } else {
      await bot_[_0x3121ab(683)]({
        id: _0x3121ab(340) + _0x212366[_0x3977d4(591)]
      }, {
        autobio: _0x4e860e
      });
      var _0x5cabd9 = await getContent(_0x212366, _0x4e860e == _0x3121ab(482) || _0x4e860e == "on" ? _0x3121ab(818) : _0x4e860e);
      await _0x212366[_0x3121ab(444)].updateProfileStatus(_0x5cabd9);
      return await _0x212366.reply(_0x3121ab(367) + (_0x3977d4(163) + _0x5cabd9 + _0x3121ab(499)));
    }
  } catch (_0x1554a4) {
    await _0x212366[_0x3977d4(502)](_0x1554a4 + _0x3121ab(695), _0x1554a4);
  }
});
const getContent = async (_0x40941c, _0x4b7d96 = "") => {
  const _0x224887 = _0x4522c5;
  const _0x3a8955 = _0x170f1d;
  try {
    let _0x3f051e = _0x4b7d96;
    if (_0x4b7d96) {
      if (_0x40941c.isGroup) {
        _0x3f051e = _0x4b7d96[_0x3a8955(782)](/@gname/gi, _0x40941c[_0x3a8955(365)].subject)[_0x3a8955(782)](/@desc/gi, _0x40941c[_0x3a8955(365)][_0x224887(139)])[_0x3a8955(782)](/@count/gi, _0x40941c[_0x3a8955(365)][_0x3a8955(441)].length);
      }
      _0x3f051e = _0x3f051e[_0x3a8955(782)](/@user/gi, "" + _0x40941c[_0x224887(558)])[_0x3a8955(782)](/@gname/gi, "")[_0x3a8955(782)](/@desc/gi, "")[_0x224887(310)](/@count/gi, "1")[_0x3a8955(782)](/@pp/g, "")[_0x224887(310)](/@time/gi, _0x40941c[_0x3a8955(828)])[_0x3a8955(782)](/@date/gi, _0x40941c[_0x224887(149)])[_0x224887(310)](/@line/gi, (await fetchJson(_0x224887(344)))[_0x3a8955(789)])[_0x3a8955(782)](/@quote/, (await axios[_0x3a8955(443)](_0x3a8955(627)))[_0x3a8955(547)][_0x3a8955(558)][_0x3a8955(452)])[_0x3a8955(782)](/@bot/gi, "" + Config[_0x3a8955(787)])[_0x3a8955(782)](/@owner/gi, "" + Config[_0x3a8955(581)])[_0x3a8955(463)]();
      return _0x3f051e;
    }
  } catch (_0x2e3a58) {
    console[_0x3a8955(659)](_0x3a8955(802), _0x2e3a58);
  }
};
let isStartAutoBio = false;
smd({
  on: _0x4522c5(518)
}, async _0x1d7538 => {
  const _0x5a8dcd = _0x4522c5;
  const _0x42c2cc = _0x170f1d;
  let _0x185bb8 = await bot_[_0x42c2cc(771)]({
    id: _0x42c2cc(340) + _0x1d7538[_0x42c2cc(908)]
  });
  if (_0x185bb8 && _0x185bb8[_0x5a8dcd(233)] && typeof _0x185bb8[_0x42c2cc(585)] === _0x42c2cc(642) && _0x185bb8[_0x42c2cc(585)] != "false") {
    if (!isStartAutoBio) {
      isStartAutoBio = true;
      abioJob = cron[_0x42c2cc(813)](_0x42c2cc(595), async () => {
        const _0x418ccc = _0x5a8dcd;
        const _0x1a69ba = _0x42c2cc;
        try {
          console[_0x1a69ba(659)](_0x418ccc(704));
          var _0x30ccff = "`";
          let _0x196965 = _0x185bb8[_0x1a69ba(585)] == _0x418ccc(146) || _0x185bb8[_0x1a69ba(585)] == "on" ? _0x1a69ba(818) : _0x185bb8[_0x1a69ba(585)];
          var _0x55ff9e = await getContent(_0x1d7538, _0x196965);
          if (_0x55ff9e && _0x55ff9e !== _0x418ccc(527)) {
            await _0x1d7538[_0x1a69ba(444)][_0x1a69ba(780)](_0x55ff9e);
          }
        } catch (_0x324cf7) {
          console[_0x1a69ba(659)](_0x324cf7);
        }
      }, {
        scheduled: true,
        timezone: global[_0x42c2cc(698)]
      });
    }
  }
});
events[_0x170f1d(431)]({
  cmdname: _0x170f1d(330),
  desc: _0x170f1d(523),
  fromMe: true,
  type: _0x4522c5(320)
}, async (_0x133764, _0x500c27) => {
  const _0x2729b5 = _0x170f1d;
  try {
    _0x133764[_0x2729b5(444)][_0x2729b5(330)]();
    _0x133764[_0x2729b5(543)](_0x2729b5(681));
  } catch (_0x4fb331) {
    _0x133764[_0x2729b5(543)](_0x2729b5(372));
    console[_0x2729b5(659)](_0x4fb331);
  }
});
events[_0x170f1d(431)]({
  cmdname: _0x4522c5(349),
  alias: [_0x170f1d(740), _0x170f1d(760)],
  desc: _0x170f1d(586),
  fromMe: true,
  type: _0x4522c5(624)
}, async (_0x54f476, _0x4b1e68, {
  args: _0x49921f
}) => {
  const _0x14f285 = _0x4522c5;
  const _0x767da = _0x170f1d;
  try {
    let _0x432642 = (_0x49921f[0] || "")[_0x767da(561)]();
    let _0x247c7c = ["qr", _0x767da(830), _0x767da(774)][_0x14f285(125)](_0x432642) ? _0x432642 : false;
    if (!_0x247c7c) {
      return await _0x54f476[_0x767da(543)](_0x767da(868) + prefix + _0x767da(831) + _0x54f476.senderNum + _0x14f285(227) + prefix + _0x767da(673));
    }
    let _0x3c5aa1 = _0x54f476[_0x767da(845)] ? _0x54f476[_0x767da(845)][_0x767da(836)] : _0x54f476[_0x767da(765)][0] ? _0x54f476[_0x767da(765)][0] : false;
    let _0x26dc43 = (_0x4b1e68[_0x767da(524)]("|")[1] || "")?.[_0x767da(782)](/[\s+]/g, "") || "";
    let _0x5de4a0 = _0x3c5aa1 ? _0x3c5aa1.split("@")[0] : _0x26dc43 ? _0x26dc43 : "";
    if (_0x247c7c == _0x767da(830) && !_0x5de4a0) {
      return _0x54f476[_0x767da(543)](_0x767da(664) + prefix + _0x767da(870) + _0x54f476[_0x767da(379)] + _0x767da(384) + prefix + _0x767da(701));
    }
    let _0x2e986f = _0x49921f[1] || "";
    let _0x203d96 = _0x2e986f && _0x2e986f[_0x767da(447)] > 30 ? _0x2e986f : "";
    if (_0x247c7c == _0x767da(774) && !_0x203d96) {
      return _0x54f476[_0x767da(543)](_0x14f285(653));
    }
    let _0xf46139 = {
      type: _0x247c7c,
      [_0x247c7c]: _0x203d96,
      user: _0x5de4a0
    };
    if (_0x247c7c == _0x767da(830) && _0x54f476[_0x767da(908)][_0x14f285(687)]("@")[0] === _0x5de4a0) {
      return _0x54f476[_0x767da(543)](_0x767da(790));
    }
    _0x54f476[_0x767da(543)](_0x14f285(421));
    Rentt(_0x54f476[_0x14f285(418)], _0x54f476, "", _0xf46139)[_0x767da(392)](_0x24c0f4 => {
      const _0x41ecad = _0x767da;
      console[_0x41ecad(659)](_0x24c0f4);
    });
  } catch (_0x34f507) {
    mm[_0x767da(543)](_0x767da(372));
    console.log(_0x34f507);
  }
});
events[_0x170f1d(431)]({
  cmdname: _0x4522c5(458),
  alias: [_0x170f1d(751), _0x170f1d(488), _0x170f1d(596)],
  desc: _0x170f1d(465),
  fromMe: true,
  type: _0x170f1d(625)
}, async _0x15597d => {
  const _0x29f96a = _0x170f1d;
  try {
    let _0x2a691e = global[_0x29f96a(626)];
    if (!_0x2a691e || !_0x2a691e[0]) {
      return await _0x15597d[_0x29f96a(543)](_0x29f96a(420));
    }
    let _0x19468a = [...new Set([..._0x2a691e[_0x29f96a(560)](_0x5a0022 => _0x5a0022[_0x29f96a(908)])[_0x29f96a(704)](_0x32bfb1 => _0x32bfb1[_0x29f96a(908)])])];
    if (!_0x19468a || !_0x19468a[0]) {
      return await _0x15597d[_0x29f96a(543)](_0x29f96a(538));
    }
    let _0x117089 = _0x29f96a(385);
    let _0xc7e8b2 = [];
    let _0x316af3 = 1;
    for (let _0x24beed of _0x19468a) {
      let _0x3086da = await _0x15597d[_0x29f96a(444)][_0x29f96a(549)](_0x24beed.id);
      _0xc7e8b2[_0x29f96a(723)](_0x3086da);
      _0x117089 += _0x316af3 + _0x29f96a(655) + _0x3086da[_0x29f96a(524)]("@")[0] + "\n\n";
      _0x316af3++;
    }
    _0x15597d[_0x29f96a(325)](_0x15597d[_0x29f96a(512)], {
      text: _0x117089,
      mentions: [..._0xc7e8b2],
      contextInfo: {
        externalAdReply: {
          title: _0x29f96a(853),
          sourceUrl: gurl
        }
      }
    }, {
      quoted: _0x15597d
    });
  } catch (_0x105023) {
    mm[_0x29f96a(543)](_0x29f96a(372));
    console[_0x29f96a(659)](_0x105023);
  }
});
events[_0x170f1d(431)]({
  cmdname: "stoprent",
  alias: [_0x170f1d(693)],
  desc: _0x170f1d(363),
  fromMe: true,
  type: _0x4522c5(624)
}, async (_0x1e29dc, _0x5d28ea) => {
  const _0x3ddd22 = _0x4522c5;
  const _0x2a3572 = _0x170f1d;
  try {
    let _0x5ca802 = global[_0x2a3572(626)];
    if (!_0x5ca802 || !_0x5ca802[0]) {
      return await _0x1e29dc[_0x2a3572(543)](_0x2a3572(420));
    }
    let _0x5154f0 = _0x1e29dc[_0x2a3572(845)] ? _0x1e29dc[_0x2a3572(845)].sender : _0x1e29dc[_0x2a3572(765)][0] ? _0x1e29dc[_0x2a3572(765)][0] : false;
    let _0x243503 = (_0x5d28ea[_0x3ddd22(687)](" ")[0] || "")?.[_0x2a3572(782)](/[\s+]/g, "") || "";
    let _0x4e2d71 = _0x5154f0 ? _0x5154f0 : _0x243503 ? _0x243503 + _0x2a3572(341) : "";
    if (!_0x4e2d71) {
      return await _0x1e29dc[_0x2a3572(543)](_0x2a3572(401));
    }
    let _0x3daf59 = _0x5ca802[_0x2a3572(418)](_0x44b7a3 => _0x44b7a3[_0x2a3572(908)].id[_0x3ddd22(125)](_0x4e2d71[_0x2a3572(524)]("@")[0]));
    if (_0x3daf59 !== -1) {
      print(_0x2a3572(319));
      _0x5ca802[_0x3daf59][_0x2a3572(489)]();
      global[_0x3ddd22(190)][_0x3ddd22(482)](_0x3daf59, 1);
      return await _0x1e29dc[_0x2a3572(543)](_0x3ddd22(541) + _0x4e2d71[_0x2a3572(524)]("@")[0] + _0x2a3572(788), {
        mentions: [_0x4e2d71]
      });
    } else {
      return await _0x1e29dc[_0x2a3572(543)](_0x2a3572(414));
    }
  } catch (_0xbfd597) {
    _0x1e29dc[_0x2a3572(543)](_0x3ddd22(412));
    console[_0x2a3572(659)](_0xbfd597);
  }
});
events[_0x170f1d(431)]({
  cmdname: _0x170f1d(550),
  alias: [_0x170f1d(583), _0x170f1d(754)],
  desc: _0x170f1d(462),
  use: _0x170f1d(798),
  fromMe: true,
  type: _0x170f1d(625)
}, async (_0x11c407, _0x3becf8) => {
  const _0x25b8b6 = _0x4522c5;
  const _0xc8b86d = _0x170f1d;
  try {
    if (!_0x3becf8) {
      return _0x11c407[_0x25b8b6(514)](_0xc8b86d(700));
    }
    let _0x465263 = global[_0xc8b86d(626)];
    if (!_0x465263 || !_0x465263[0]) {
      return await _0x11c407[_0xc8b86d(543)](_0x25b8b6(479));
    }
    let _0x2571d3 = _0x3becf8[_0xc8b86d(524)](" ")[0][_0xc8b86d(561)]()[_0xc8b86d(463)]();
    let _0x3bb0da = events[_0xc8b86d(756)].find(_0x255ef8 => _0x255ef8[_0xc8b86d(323)] === _0x2571d3) || events[_0xc8b86d(756)][_0xc8b86d(726)](_0x1c7021 => _0x1c7021[_0xc8b86d(422)] && _0x1c7021[_0x25b8b6(408)].includes(_0x2571d3));
    if (!_0x3bb0da) {
      return await _0x11c407[_0xc8b86d(543)](_0xc8b86d(537));
    }
    if (global[_0x25b8b6(432)][_0xc8b86d(889)](_0x3bb0da[_0xc8b86d(323)])) {
      return await _0x11c407.reply("*'" + _0x3bb0da[_0xc8b86d(323)] + _0xc8b86d(800));
    }
    global.rentdisable[_0xc8b86d(723)](_0x3bb0da[_0x25b8b6(530)]);
    return await _0x11c407[_0xc8b86d(543)]("*'" + _0x3bb0da[_0xc8b86d(323)] + _0xc8b86d(516));
  } catch (_0x24ec77) {
    _0x11c407[_0xc8b86d(543)](_0xc8b86d(372));
    console[_0xc8b86d(659)](_0x24ec77);
  }
});
events[_0x4522c5(168)]({
  cmdname: _0x170f1d(448),
  alias: [_0x170f1d(822), _0x170f1d(891)],
  desc: _0x170f1d(335),
  use: _0x170f1d(798),
  fromMe: true,
  type: _0x170f1d(625)
}, async (_0x3b72e8, _0x13fa29) => {
  const _0x319aab = _0x4522c5;
  const _0x3d1450 = _0x170f1d;
  try {
    if (!_0x13fa29) {
      return _0x3b72e8[_0x3d1450(543)]("*provide cmdName to disable for rent user!*");
    }
    let _0x4b4ab4 = _0x13fa29[_0x3d1450(524)](" ")[0][_0x3d1450(561)]()[_0x3d1450(463)]();
    let _0x36294d = events[_0x3d1450(756)][_0x3d1450(726)](_0x1ddeb0 => _0x1ddeb0[_0x3d1450(323)] === _0x4b4ab4) || events[_0x319aab(210)][_0x3d1450(726)](_0x4a955b => _0x4a955b[_0x3d1450(422)] && _0x4a955b[_0x3d1450(422)][_0x3d1450(889)](_0x4b4ab4));
    if (!_0x36294d) {
      return await _0x3b72e8[_0x3d1450(543)](_0x3d1450(912));
    }
    if (global[_0x3d1450(550)][_0x3d1450(889)](_0x36294d[_0x3d1450(323)])) {
      global[_0x3d1450(550)] = global[_0x319aab(432)][_0x319aab(338)](_0x265b1b => _0x265b1b !== _0x36294d[_0x3d1450(323)]);
      return await _0x3b72e8[_0x3d1450(543)]("*'" + _0x36294d[_0x3d1450(323)] + _0x3d1450(360));
    } else {
      return await _0x3b72e8[_0x3d1450(543)](_0x3d1450(814));
    }
  } catch (_0x165801) {
    _0x3b72e8.reply(_0x3d1450(372));
    console[_0x3d1450(659)](_0x165801);
  }
});
events[_0x170f1d(431)]({
  cmdname: _0x170f1d(705),
  alias: [_0x170f1d(892)],
  desc: _0x170f1d(749),
  fromMe: true,
  type: "rent"
}, async _0x1d7a05 => {
  const _0x44c8ed = _0x4522c5;
  const _0x30c824 = _0x170f1d;
  try {
    let _0x5d5b10 = global[_0x44c8ed(432)] && global[_0x30c824(550)][0] ? global.rentdisable[_0x30c824(553)](_0x30c824(377)) : "";
    let _0x10cce3 = _0x30c824(858) + (_0x5d5b10 ? _0x30c824(390) + _0x5d5b10 + "\n\n" : "") + _0x30c824(678) + disabledperma[_0x44c8ed(463)](_0x30c824(377)) + "\n";
    return await _0x1d7a05[_0x30c824(732)](_0x10cce3, {
      contextInfo: {
        externalAdReply: {
          title: _0x44c8ed(279),
          sourceUrl: gurl
        }
      }
    });
  } catch (_0x1b06fb) {
    _0x1d7a05[_0x30c824(543)](_0x30c824(372));
    console[_0x30c824(659)](_0x1b06fb);
  }
});
let showQr = {};
const Pino = require(_0x170f1d(426));
const {
  Boom
} = require(_0x4522c5(256));
const FileType = require(_0x170f1d(755));
const path = require(_0x170f1d(752));
const {
  imageToWebp,
  videoToWebp,
  writeExifImg,
  writeExifVid
} = require(_0x4522c5(611));
const {
  default: SuhailMDConnect,
  BufferJSON,
  getAggregateVotesInPollMessage,
  generateLinkPreviewIfRequired,
  WA_DEFAULT_EPHEMERAL,
  proto,
  generateWAMessageContent,
  generateWAMessage,
  AnyMessageContent,
  prepareWAMessageMedia,
  areJidsSameUser,
  getContentType,
  downloadContentFromMessage,
  DisconnectReason,
  useMultiFileAuthState,
  fetchLatestBaileysVersion,
  MessageRetryMap,
  generateForwardMessageContent,
  generateWAMessageFromContent,
  extractMessageContent,
  generateMessageID,
  makeInMemoryStore,
  makeCacheableSignalKeyStore,
  jidDecode
} = require(_0x170f1d(436));
const {
  sck,
  groupdb,
  Plugindb
} = require(_0x170f1d(803));
const moment = require(_0x170f1d(692));
const {
  smsg,
  callsg,
  groupsg,
  pollsg
} = require(_0x170f1d(582));
const {
  getSizeMedia
} = require(_0x170f1d(803));
var prefixRegex = Config[_0x170f1d(620)] === "false" || Config[_0x170f1d(620)] === _0x170f1d(711) ? new RegExp(_0x170f1d(457)) : new RegExp("^[" + Config[_0x170f1d(358)] + "]");
var suhails = false;
const Rentt = async (_0x4d86fc, _0x2b61e6, _0x563e44 = "", _0xd22ace = {}) => {
  const _0x539354 = _0x4522c5;
  const _0x4cd5af = _0x170f1d;
  let {
    sendMessage: _0x3ab8a8,
    sendImage: _0x2b42a1
  } = _0x4d86fc;
  let {
    from: _0x3bbf71,
    senderNum: _0x526468,
    reply: _0x58cd6b
  } = _0x2b61e6;
  let _0x518fa2 = _0xd22ace[_0x539354(591)] || _0x4cd5af(337);
  let _0xb74ba7 = "/" + _0x518fa2 + _0x539354(526);
  let _0x58b21e = __dirname + _0xb74ba7 + _0x539354(713);
  const _0x4a181d = async (_0x273768, _0x23eb54 = _0x4cd5af(810)) => {
    const _0xcb1e9c = _0x539354;
    const _0x345a06 = _0x4cd5af;
    try {
      if (fs[_0xcb1e9c(435)](_0x273768)) {
        if (_0x23eb54 == _0x345a06(810)) {
          fs[_0x345a06(407)](_0x273768, {
            recursive: true
          });
        } else {
          fs[_0x345a06(809)](_0x273768);
        }
        return true;
      } else {
        return true;
      }
    } catch {}
  };
  const _0x10f1ab = async (_0x1e58d7, _0x3af405 = "dir", _0x3d1e37 = "{}") => {
    const _0x27d872 = _0x539354;
    const _0x2f2718 = _0x4cd5af;
    try {
      if (_0x3af405 == "dir") {
        fs[_0x2f2718(869)](_0x1e58d7, {
          recursive: true
        });
      } else {
        fs[_0x27d872(414)](_0x1e58d7, _0x3d1e37, _0x2f2718(628));
      }
      return true;
    } catch {}
  };
  async function _0x2021a7() {
    const _0xbaba41 = _0x539354;
    const _0x2258e2 = _0x4cd5af;
    try {
      await _0x4a181d(_0x58b21e, _0xbaba41(586));
    } catch (_0x5c9e9a) {}
    if (_0xd22ace[_0xbaba41(171)] === "session") {
      var _0x433959 = ("" + _0xd22ace[_0xd22ace[_0x2258e2(579)]])[_0x2258e2(782)](/^SESSION_\d{2}_\d{2}_\d{2}_\d{2}_/, "")[_0x2258e2(782)](/Secktor;;;/gi, "")[_0x2258e2(782)](/Vorterx;;;/gi, "")[_0x2258e2(782)](/Suhail;;;/gi, "")[_0x2258e2(782)](/^SUHAIL_\d{2}_\d{2}_\d{2}_\d{2}_/, "")[_0x2258e2(463)]();
      var _0x13b367 = {};
      if (_0x433959 && /guru/gi[_0x2258e2(535)](_0x433959) && _0x433959[_0x2258e2(447)] < 50) {
        let _0x2c7a91 = global[_0xbaba41(445)] || _0xbaba41(696);
        const _0xeadabe = _0x2c7a91 + Ids;
        try {
          const _0xacfa85 = await (await fetch(_0xeadabe))[_0x2258e2(594)]();
          const _0x37ee56 = _0xacfa85[_0x2258e2(600)];
          _0x13b367 = Buffer[_0x2258e2(512)](_0x37ee56, _0x2258e2(450))[_0xbaba41(184)](_0xbaba41(230));
        } catch (_0x4d0a0e) {
          console[_0x2258e2(847)](_0xbaba41(128) + myQrUrl + _0x2258e2(622), _0x4d0a0e);
        }
      } else if (_0x433959 && _0x433959[_0x2258e2(447)] > 3 && _0x433959[_0x2258e2(447)] > 30) {
        _0x13b367 = Buffer[_0xbaba41(268)](_0x433959, _0x2258e2(450))[_0xbaba41(184)](_0x2258e2(767));
      }
      try {
        const _0x333735 = JSON[_0x2258e2(519)](_0x13b367);
        if (_0x333735.me && _0x333735.me.id) {
          _0x518fa2 = _0x333735.me.id?.[_0x2258e2(524)](":")[0]?.[_0x2258e2(524)]("@")[0] || _0x518fa2;
          _0xb74ba7 = "/" + _0x518fa2 + _0x2258e2(484);
          _0x58b21e = path[_0xbaba41(463)](__dirname, _0xb74ba7, "creds.json");
          if (!fs[_0x2258e2(747)](path[_0x2258e2(553)](__dirname, _0xb74ba7))) {
            await _0x10f1ab(path[_0x2258e2(553)](__dirname, _0xb74ba7));
            await _0x10f1ab(_0x58b21e, _0x2258e2(666), _0x13b367);
          }
          fs[_0x2258e2(424)](_0x58b21e, _0x13b367, _0x2258e2(628));
          console[_0x2258e2(659)](_0x2258e2(316));
        }
      } catch (_0x3832d9) {
        console[_0xbaba41(173)](_0x3832d9);
      }
    }
  }
  _0x2021a7();
  let _0x46e716 = {};
  setTimeout(() => {
    const _0x247b70 = _0x539354;
    const _0x52e0f0 = _0x4cd5af;
    async function _0x2b685d() {}
    _0x2b685d();
    const _0x5c4ca5 = makeInMemoryStore({
      logger: Pino({
        level: _0x52e0f0(880)
      })[_0x52e0f0(578)]({
        level: _0x247b70(413)
      })
    });
    require(_0x247b70(328)).EventEmitter.defaultMaxListeners = 1000;
    const _0x24f24f = MessageRetryMap || {};
    async function _0x4b8a84() {
      const _0xd5bc3a = _0x247b70;
      const _0x3f938f = _0x52e0f0;
      let {
        state: _0x42e525,
        saveCreds: _0x2f1606
      } = await useMultiFileAuthState(__dirname + _0xb74ba7);
      const _0x508c65 = SuhailMDConnect({
        logger: Pino({
          level: _0x3f938f(880) || "debug"
        })[_0x3f938f(578)]({
          level: _0x3f938f(880)
        }),
        browser: _0xd22ace[_0xd5bc3a(171)] === _0x3f938f(830) ? [_0x3f938f(498), "", ""] : [_0x3f938f(311) + Config[_0x3f938f(581)] + "]", _0x3f938f(562), "1.0.0"],
        generateHighQualityLinkPreview: true,
        auth: {
          creds: _0x42e525[_0x3f938f(492)],
          keys: makeCacheableSignalKeyStore(_0x42e525[_0x3f938f(848)], Pino({
            level: _0xd5bc3a(413)
          })[_0x3f938f(578)]({
            level: _0x3f938f(880)
          }))
        },
        getMessage: async _0xa51335 => {
          const _0x433487 = _0x3f938f;
          if (_0x5c4ca5) {
            const _0x2d4d7e = await _0x5c4ca5[_0x433487(899)](_0xa51335[_0x433487(915)], _0xa51335.id, undefined);
            return _0x2d4d7e[_0x433487(511)] || undefined;
          }
          return {
            conversation: _0x433487(605)
          };
        }
      });
      _0x5c4ca5[_0x3f938f(318)](_0x508c65.ev);
      setInterval(() => {
        const _0x2ae911 = _0x3f938f;
        try {
          const _0x5583fa = __dirname + ("/" + _0xb74ba7 + _0x2ae911(779));
          if (!fs[_0x2ae911(747)](_0x5583fa)) {
            fs[_0x2ae911(424)](_0x5583fa, "{}", _0x2ae911(628));
          }
          _0x5c4ca5[_0x2ae911(763)](_0x5583fa);
        } catch (_0x21b33e) {
          console[_0x2ae911(659)](_0x2ae911(725), _0x21b33e);
        }
      }, 30000);
      if (_0xd22ace.type === _0x3f938f(830) && !_0x508c65.authState[_0x3f938f(492)][_0x3f938f(708)]) {
        setTimeout(async () => {
          const _0x526a2e = _0xd5bc3a;
          const _0x46493f = _0x3f938f;
          try {
            if (_0xd22ace[_0x526a2e(171)] === _0x46493f(830)) {
              console[_0x526a2e(173)]({
                num: _0x518fa2
              });
              let _0x682287 = await _0x508c65[_0x46493f(395)](_0x518fa2);
              _0x682287 = _0x682287?.[_0x526a2e(488)](/.{1,4}/g)?.[_0x46493f(553)]("-") || _0x682287;
              await _0x2b61e6[_0x526a2e(514)](_0x46493f(350) + _0xd22ace[_0x526a2e(591)] + _0x46493f(328) + _0x682287 + _0x46493f(602) + Config[_0x46493f(860)] + "\n", {
                mentions: [_0xd22ace[_0x46493f(908)] + _0x46493f(341), _0x2b61e6[_0x46493f(836)]],
                contextInfo: {
                  externalAdReply: {
                    title: _0x682287
                  }
                }
              }, _0x46493f(760));
            }
          } catch (_0x173669) {
            print(_0x46493f(319));
            console[_0x46493f(659)](_0x173669);
            _0x508c65[_0x46493f(489)]();
          }
        }, 5000);
      }
      _0x508c65.ev.on(_0x3f938f(663), async _0x68c611 => {
        const _0x58a27c = _0x3f938f;
        let _0x3ab73d = await callsg(_0x508c65, JSON[_0x58a27c(519)](JSON[_0x58a27c(713)](_0x68c611[0])));
        events[_0x58a27c(756)].map(async _0x2c0028 => {
          const _0x4bd4fe = _0x169a;
          const _0x18aafe = _0x58a27c;
          if (_0x2c0028[_0x18aafe(663)] === _0x18aafe(506) && _0x3ab73d[_0x18aafe(551)] === _0x18aafe(506)) {
            try {
              _0x2c0028[_0x18aafe(509)](_0x3ab73d, {
                store: _0x5c4ca5,
                RNTVoid: _0x508c65
              });
            } catch (_0x506dff) {
              console[_0x18aafe(847)]("[CALL ERROR] ", _0x506dff);
            }
          }
          if (_0x2c0028[_0x18aafe(663)] === _0x18aafe(438) && _0x3ab73d[_0x18aafe(551)] === _0x18aafe(438)) {
            try {
              _0x2c0028[_0x18aafe(509)](_0x3ab73d, {
                store: _0x5c4ca5,
                RNTVoid: _0x508c65
              });
            } catch (_0x16f905) {
              console[_0x18aafe(847)](_0x18aafe(611), _0x16f905);
            }
          }
          if (_0x2c0028[_0x4bd4fe(374)] === _0x18aafe(663) || _0x2c0028[_0x18aafe(663)] === "on" || _0x2c0028[_0x18aafe(663)] === _0x18aafe(428)) {
            try {
              _0x2c0028[_0x18aafe(509)](_0x3ab73d, {
                store: _0x5c4ca5,
                RNTVoid: _0x508c65
              });
            } catch (_0x5a9938) {
              console[_0x4bd4fe(502)](_0x18aafe(565), _0x5a9938);
            }
          }
        });
      });
      let _0x55b8a4 = {};
      _0x508c65.ev.on(_0x3f938f(366), async _0x2e5156 => {
        const _0x4d8533 = _0xd5bc3a;
        const _0x49b190 = _0x3f938f;
        if (!global.SmdOfficial || global[_0x49b190(394)] !== _0x4d8533(245)) {
          return;
        }
        const _0x833d03 = await _0x508c65[_0x49b190(549)](_0x508c65[_0x49b190(908)].id);
        const _0x17e0e9 = _0x833d03[_0x49b190(524)]("@")[0];
        const _0x17f086 = _0x2e5156[_0x49b190(408)][0];
        if (!_0x17f086[_0x49b190(511)]) {
          return;
        }
        _0x17f086[_0x49b190(511)] = Object[_0x49b190(848)](_0x17f086[_0x49b190(511)])[0] === _0x49b190(914) ? _0x17f086[_0x49b190(511)][_0x49b190(914)][_0x49b190(511)] : _0x17f086[_0x49b190(511)];
        try {
          let _0x3ed844 = await smsg(_0x508c65, JSON[_0x49b190(519)](JSON[_0x4d8533(475)](_0x17f086)), _0x5c4ca5, true);
          let _0x3341d9 = _0x3ed844;
          if (!_0x3ed844[_0x49b190(511)]) {
            return;
          }
          var {
            body: _0x1d8989
          } = _0x3ed844;
          const _0x340d44 = _0x3ed844[_0x49b190(878)];
          var _0x49b877 = typeof _0x3ed844[_0x49b190(839)] == _0x4d8533(140) ? _0x3ed844[_0x4d8533(518)][_0x49b190(463)]() : "";
          if (_0x49b877 && _0x1d8989[1] && _0x1d8989[1] == " ") {
            _0x1d8989 = _0x1d8989[0] + _0x1d8989[_0x49b190(630)](2);
          }
          let _0x588905 = false;
          let _0x32d5f2 = false;
          if (_0x49b877 && Config[_0x49b190(358)][_0x49b190(561)]()[_0x49b190(889)](_0x4d8533(715))) {
            _0x588905 = true;
            _0x32d5f2 = _0x1d8989[_0x4d8533(687)](" ")[0][_0x49b190(561)]() || false;
          } else if (_0x49b877 && !Config[_0x4d8533(609)][_0x49b190(561)]()[_0x49b190(889)](_0x49b190(711))) {
            _0x588905 = _0x1d8989 && prefixRegex.test(_0x1d8989[0]) || _0x17e0e9 !== _0x49b190(906) && _0x3ed844[_0x49b190(527)] && _0x1d8989[0] == ",";
            _0x32d5f2 = _0x588905 ? _0x1d8989[_0x49b190(630)](1)[_0x49b190(463)]()[_0x49b190(524)](" ")[0][_0x49b190(561)]() : false;
          } else {
            _0x588905 = false;
          }
          let _0x417854 = _0x32d5f2 ? _0x32d5f2.trim() : "";
          if (_0x417854 && global[_0x4d8533(557)][_0x417854] !== undefined) {
            _0x32d5f2 = global[_0x49b190(748)][_0x417854];
            _0x588905 = true;
          } else if (_0x3ed844[_0x49b190(344)] == _0x4d8533(164)) {
            _0x417854 = _0x49b190(901) + _0x3ed844[_0x4d8533(642)][_0x49b190(433)];
            if (global[_0x49b190(748)][_0x417854]) {
              _0x32d5f2 = global[_0x49b190(748)][_0x417854];
              _0x588905 = true;
            }
          }
          const _0xa20807 = [_0x49b190(493), ...global[_0x49b190(728)][_0x4d8533(687)](",")];
          const _0x4feb36 = [_0x49b190(711), ...global[_0x4d8533(217)][_0x4d8533(687)](",")];
          if (_0xa20807.includes(_0x3ed844[_0x4d8533(590)]) && !_0x3ed844[_0x49b190(527)]) {
            return;
          }
          if (!_0x340d44 && Config[_0x4d8533(528)] === _0x4d8533(175) && _0x588905 && !_0x4feb36[_0x4d8533(125)](_0x3ed844[_0x49b190(603)]) || _0x3ed844[_0x49b190(651)]) {
            _0x588905 = false;
          }
          if (Config[_0x49b190(896)] === _0x49b190(482) && _0x588905) {
            await _0x508c65[_0x49b190(875)]([_0x3ed844[_0x49b190(567)]]);
          }
          const _0x4afa2a = _0x3ed844[_0x49b190(452)] ? _0x1d8989[_0x49b190(463)]()[_0x49b190(524)](/ +/)[_0x49b190(630)](1) : null;
          if (!_0x340d44 && Config[_0x49b190(864)] === _0x49b190(482) && _0x588905 && !_0x3ed844[_0x49b190(362)]) {
            _0x588905 = false;
          }
          if (!_0x340d44 && _0x588905) {
            try {
              let _0x1d01e8 = (await userdb[_0x4d8533(295)]({
                id: _0x3ed844[_0x4d8533(700)]
              })) || {
                ban: _0x49b190(842)
              };
              if (_0x1d01e8[_0x49b190(703)] === _0x4d8533(146) && !_0x340d44) {
                _0x588905 = false;
                await _0x3ed844[_0x49b190(543)](_0x4d8533(522) + _0x3ed844[_0x49b190(618)] + ",*\n_You are not allowed from using commands._\n_Please contact owner for further information._");
              }
            } catch (_0x5be35f) {
              console[_0x49b190(659)](_0x49b190(685), _0x5be35f);
            }
          }
          _0x46e716.bot = _0x508c65;
          const _0x5bc3ee = _0x508c65;
          if (_0x588905) {
            let _0x325236 = events[_0x49b190(756)][_0x49b190(726)](_0x585cac => _0x585cac[_0x4d8533(530)] === _0x32d5f2) || events[_0x49b190(756)].find(_0x40b4f4 => _0x40b4f4[_0x4d8533(408)] && _0x40b4f4[_0x49b190(422)][_0x49b190(889)](_0x32d5f2));
            if (_0x325236?.[_0x4d8533(631)] && !_0x3ed844[_0x49b190(721)] && !_0x340d44) {
              _0x325236 = false;
              return _0x3ed844[_0x49b190(543)](tlang()[_0x49b190(795)]);
            }
            if (_0x3ed844[_0x49b190(362)] && _0x325236 && _0x32d5f2 !== _0x49b190(444)) {
              let _0x4d4d83 = (await groupdb[_0x49b190(771)]({
                id: _0x3ed844[_0x49b190(603)]
              })) || {};
              if (_0x4d4d83.botenable === _0x49b190(842)) {
                _0x325236 = false;
              }
              if (_0x325236 && _0x4d4d83) {
                let _0x13b1fb = _0x325236.pattern[_0x49b190(782)](/[.*+?^${}()|[\]\\]/g, _0x49b190(876));
                let _0x41a374 = new RegExp("\\b" + _0x13b1fb + "\\b");
                if (_0x4d4d83[_0x49b190(312)] !== _0x49b190(842) && _0x41a374[_0x4d8533(317)](_0x4d4d83.disablecmds)) {
                  _0x325236 = false;
                }
              }
            }
            if (_0x325236) {
              let _0x57dba9 = [_0x49b190(559), _0x49b190(643), _0x49b190(745)];
              if (!_0x57dba9[_0x4d8533(125)](_0x3ed844[_0x49b190(836)]) && (global[_0x49b190(550)][_0x49b190(889)](_0x325236[_0x4d8533(530)]) || disabledperma[_0x49b190(889)](_0x325236[_0x49b190(323)]))) {
                return;
              }
              if (_0x325236[_0x49b190(563)]) {
                await _0x3ed844[_0x49b190(563)](_0x325236[_0x49b190(563)]);
              }
              let _0x4df2de;
              try {
                _0x4df2de = _0x3ed844[_0x4d8533(569)] ? _0x1d8989[_0x49b190(463)]().split(/ +/).slice(1)[_0x49b190(553)](" ") : "";
              } catch {
                _0x4df2de = "";
              }
              let _0x3cca41 = _0x325236[_0x49b190(323)];
              _0x3ed844[_0x49b190(431)] = _0x3cca41;
              try {
                _0x325236[_0x49b190(509)](_0x3ed844, _0x4df2de, {
                  text: _0x4df2de,
                  body: _0x1d8989,
                  args: _0x4afa2a,
                  cmdName: _0x32d5f2,
                  isCreator: _0x340d44,
                  smd: _0x3cca41,
                  botNumber: _0x833d03,
                  budy: _0x49b877,
                  store: _0x5c4ca5,
                  Suhail: _0x46e716,
                  Void: _0x5bc3ee
                });
              } catch (_0x4da2b2) {
                console[_0x49b190(847)](_0x49b190(650), _0x4da2b2);
              }
            } else {
              _0x588905 = false;
              const _0x1ccc6b = events[_0x4d8533(210)][_0x49b190(726)](_0x4d37f9 => _0x4d37f9[_0x49b190(332)] === _0x32d5f2) || false;
              if (_0x1ccc6b) {
                const _0x29b020 = {};
                let _0xf9bc19 = "";
                events[_0x49b190(756)][_0x49b190(704)](async (_0x5b6908, _0x2319be) => {
                  const _0x5bc423 = _0x4d8533;
                  const _0xc363d2 = _0x49b190;
                  if (_0x5b6908.dontAddCommandList === false && _0x5b6908[_0x5bc423(530)] !== undefined) {
                    if (!_0x29b020[_0x5b6908.category]) {
                      _0x29b020[_0x5b6908[_0x5bc423(208)]] = [];
                    }
                    _0x29b020[_0x5b6908[_0xc363d2(332)]][_0xc363d2(723)](_0x5b6908[_0xc363d2(323)]);
                  }
                });
                for (const _0x5417e1 in _0x29b020) {
                  if (_0x32d5f2 == _0x5417e1[_0x49b190(561)]()) {
                    _0xf9bc19 = _0x49b190(513) + _0x5417e1[_0x4d8533(619)]() + " menu*  ‚å™‚îÄ‚îÄ‚îÄ‚óÜ\n‚îÇ‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ¬∑¬∑¬∑‚ñ∏\n‚î¥‚îÇ‚ñ∏\n";
                    for (const _0x72c270 of _0x29b020[_0x5417e1]) {
                      _0xf9bc19 += _0x49b190(844) + _0x72c270 + "\n";
                    }
                    _0xf9bc19 += _0x49b190(430);
                    break;
                  }
                }
                await _0x508c65[_0x4d8533(316)](_0x3ed844[_0x49b190(904)], {
                  caption: tiny(_0xf9bc19)
                });
              }
            }
          }
          text = _0x3ed844[_0x49b190(452)];
          let _0x21ef75 = {
            body: _0x1d8989,
            mek: _0x17f086,
            text: text,
            args: _0x4afa2a,
            botNumber: _0x833d03,
            isCreator: _0x340d44,
            icmd: _0x588905,
            store: _0x5c4ca5,
            budy: _0x49b877,
            Suhail: _0x46e716,
            Void: _0x5bc3ee,
            proto: proto
          };
          events[_0x4d8533(210)][_0x4d8533(183)](async _0x3d1d0c => {
            const _0x3b5fd2 = _0x4d8533;
            const _0x18d166 = _0x49b190;
            if (_0x1d8989 && _0x3d1d0c.on === _0x18d166(452) || _0x3d1d0c.on === _0x18d166(665)) {
              try {
                _0x3d1d0c[_0x18d166(509)](_0x3ed844, _0x1d8989, _0x21ef75);
              } catch (_0x1bcf41) {
                console[_0x18d166(847)](_0x18d166(650), _0x1bcf41);
              }
            } else if (_0x3ed844[_0x18d166(839)] && _0x3d1d0c.on === _0x18d166(839)) {
              try {
                _0x3d1d0c[_0x18d166(509)](_0x3ed844, _0x1d8989, _0x21ef75);
              } catch (_0x342065) {
                console[_0x18d166(847)](_0x18d166(650), _0x342065);
              }
            } else if ((_0x3d1d0c.on === _0x3b5fd2(562) || _0x3d1d0c.on === _0x18d166(913)) && _0x3ed844[_0x18d166(344)] === _0x18d166(446)) {
              try {
                _0x3d1d0c[_0x18d166(509)](_0x3ed844, _0x1d8989, _0x21ef75);
              } catch (_0x63cb81) {
                console[_0x3b5fd2(502)](_0x18d166(650), _0x63cb81);
              }
            } else if ((_0x3d1d0c.on === _0x18d166(619) || _0x3d1d0c.on === _0x18d166(736)) && _0x3ed844[_0x3b5fd2(469)] === _0x18d166(483)) {
              try {
                _0x3d1d0c[_0x18d166(509)](_0x3ed844, _0x1d8989, _0x21ef75);
              } catch (_0x2b5faf) {
                console[_0x18d166(847)](_0x18d166(650), _0x2b5faf);
              }
            } else if (_0x3d1d0c.on === _0x18d166(449) && _0x3ed844[_0x3b5fd2(469)] === _0x18d166(568)) {
              try {
                _0x3d1d0c[_0x18d166(509)](_0x3ed844, _0x1d8989, _0x21ef75);
              } catch (_0x3390c1) {
                console[_0x18d166(847)](_0x18d166(650), _0x3390c1);
              }
            } else if (_0x3d1d0c.on === _0x3b5fd2(307) && _0x3ed844[_0x18d166(344)] == _0x18d166(542) && _0x3ed844[_0x18d166(849)][_0x3b5fd2(171)] === _0x3b5fd2(179)) {
              try {
                _0x3d1d0c[_0x18d166(509)](_0x3ed844, _0x1d8989, _0x21ef75);
              } catch (_0x3057d2) {
                console[_0x18d166(847)](_0x3b5fd2(497), _0x3057d2);
              }
            } else if (_0x3d1d0c.on === _0x3b5fd2(570) && (_0x3ed844.viewOnce || _0x17f086[_0x18d166(511)][_0x18d166(865)])) {
              try {
                _0x3d1d0c[_0x3b5fd2(575)](_0x3ed844, _0x1d8989, _0x21ef75);
              } catch (_0x30b23c) {
                console[_0x18d166(847)](_0x18d166(650), _0x30b23c);
              }
            } else if (_0x3d1d0c.on === _0x18d166(405) && _0x3ed844[_0x18d166(344)][_0x18d166(561)]()[_0x3b5fd2(125)](_0x18d166(405))) {
              try {
                _0x3d1d0c[_0x18d166(509)](_0x3ed844, _0x1d8989, _0x21ef75);
              } catch (_0x1df816) {
                console[_0x18d166(847)](_0x18d166(650), _0x1df816);
              }
            } else if (_0x3d1d0c.on === _0x18d166(387) && _0x3ed844[_0x18d166(387)]) {
              try {
                _0x3d1d0c[_0x3b5fd2(575)](_0x3ed844, _0x1d8989, _0x21ef75);
              } catch (_0x5b0681) {
                console[_0x18d166(847)](_0x18d166(650), _0x5b0681);
              }
            }
          });
          try {
            let _0xf62ce = (await groupdb[_0x49b190(771)]({
              id: _0x3ed844[_0x49b190(603)]
            })) || (await groupdb[_0x49b190(556)]({
              id: _0x3ed844[_0x49b190(603)]
            }));
            let _0x5848f1 = (await userdb[_0x49b190(771)]({
              id: _0x3ed844[_0x4d8533(700)]
            })) || (await userdb[_0x49b190(556)]({
              id: _0x3ed844[_0x4d8533(700)],
              name: _0x3ed844[_0x4d8533(218)] || _0x4d8533(554)
            }));
          } catch (_0x576d9c) {}
          try {
            async function _0x7f1137(_0x9e01e7, _0x1fba08, _0x398394 = "") {
              const _0x14fa8b = _0x4d8533;
              const _0x56581 = _0x49b190;
              let [_0x2b1022, _0x246292] = _0x9e01e7[_0x56581(524)](":")[_0x14fa8b(183)](Number);
              var _0x365d09 = _0x398394 === _0x14fa8b(461) ? _0x56581(382) : _0x398394 === _0x56581(882) ? _0x56581(526) : "";
              if (isNaN(_0x2b1022) || isNaN(_0x246292) || _0x2b1022 < 0 || _0x2b1022 >= 24 || _0x246292 < 0 || _0x246292 >= 60 || !_0x365d09) {
                return;
              }
              if (_0x55b8a4[_0x1fba08] && _0x55b8a4[_0x1fba08][_0x398394] === _0x9e01e7) {
                return;
              } else {
                _0x55b8a4[_0x1fba08] = {
                  [_0x398394]: _0x9e01e7
                };
              }
              console[_0x56581(659)](_0x14fa8b(635) + _0x1fba08 + "\n[SET AUTO " + _0x398394[_0x56581(657)]() + " AT] : " + _0x9e01e7 + " ");
              let _0x24cd0e = require(_0x56581(817));
              _0x24cd0e[_0x14fa8b(597)](_0x246292 + " " + _0x2b1022 + " * * *", () => {
                (async () => {
                  const _0x3f433a = _0x4bb2;
                  try {
                    return await _0x508c65[_0x3f433a(456)](_0x1fba08, _0x365d09);
                  } catch (_0xd9205) {
                    return _0xd9205;
                  }
                })();
              }, {
                scheduled: true,
                timezone: global[_0x56581(698)] || _0x56581(534)
              });
            }
            async function _0x509272() {
              const _0x43dceb = _0x4d8533;
              const _0x1321d7 = _0x49b190;
              let _0xb7b6ab = await groupdb[_0x1321d7(726)]({});
              for (let _0x2cea86 = 0; _0x2cea86 < _0xb7b6ab[_0x1321d7(447)]; _0x2cea86++) {
                if (!_0xb7b6ab[_0x2cea86][_0x1321d7(821)] || !_0xb7b6ab[_0x2cea86].id[_0x1321d7(889)](_0x43dceb(572)) || _0xb7b6ab[_0x2cea86][_0x1321d7(821)] === _0x1321d7(842) || _0xb7b6ab[_0x2cea86][_0x1321d7(821)] === _0x1321d7(482)) {
                  continue;
                }
                await _0x7f1137(_0xb7b6ab[_0x2cea86][_0x1321d7(821)], _0xb7b6ab[_0x2cea86].id, _0x1321d7(821));
              }
            }
            async function _0x5b01b7() {
              const _0x3cd197 = _0x4d8533;
              const _0x2760e6 = _0x49b190;
              let _0x29d0e4 = await groupdb[_0x2760e6(726)]({});
              for (let _0x5f1301 = 0; _0x5f1301 < _0x29d0e4[_0x2760e6(447)]; _0x5f1301++) {
                if (!_0x29d0e4[_0x5f1301][_0x2760e6(882)] || !_0x29d0e4[_0x5f1301].id[_0x2760e6(889)](_0x2760e6(730)) || _0x29d0e4[_0x5f1301][_0x2760e6(882)] === _0x2760e6(842) || _0x29d0e4[_0x5f1301][_0x2760e6(882)] === _0x2760e6(482)) {
                  continue;
                }
                await _0x7f1137(_0x29d0e4[_0x5f1301][_0x2760e6(882)], _0x29d0e4[_0x5f1301].id, _0x3cd197(685));
              }
            }
            _0x509272();
            _0x5b01b7();
          } catch (_0x37fc6d) {
            console.log(_0x49b190(476), _0x37fc6d);
          }
        } catch (_0x12dc41) {
          console[_0x4d8533(173)](_0x49b190(812), _0x12dc41);
        }
      });
      _0x508c65.ev.on(_0x3f938f(758), async _0x252c8f => {
        const _0x3d928b = _0x3f938f;
        let _0x43647d = await groupsg(_0x508c65, JSON[_0x3d928b(519)](JSON[_0x3d928b(713)](_0x252c8f)), true);
        if (!_0x43647d || !_0x43647d[_0x3d928b(362)]) {
          return;
        }
        events[_0x3d928b(756)][_0x3d928b(704)](async _0x5c2d0a => {
          const _0x4fa456 = _0x169a;
          const _0x3bec25 = _0x3d928b;
          if (_0x43647d[_0x4fa456(345)] === _0x3bec25(717) && _0x5c2d0a[_0x3bec25(907)] === _0x3bec25(717)) {
            try {
              _0x5c2d0a[_0x3bec25(509)](_0x43647d, {
                store: _0x5c4ca5,
                RNTVoid: _0x508c65
              });
            } catch (_0x1a6982) {
              console[_0x3bec25(847)](_0x4fa456(386), _0x1a6982);
            }
          }
          if (_0x43647d[_0x3bec25(551)] === _0x3bec25(375) && _0x5c2d0a[_0x3bec25(907)] === _0x3bec25(375)) {
            try {
              _0x5c2d0a[_0x3bec25(509)](_0x43647d, {
                store: _0x5c4ca5,
                RNTVoid: _0x508c65
              });
            } catch (_0x4fb57c) {
              console[_0x3bec25(847)](_0x3bec25(688), _0x4fb57c);
            }
          }
          if (_0x43647d[_0x4fa456(345)] === _0x3bec25(874) && _0x5c2d0a[_0x3bec25(907)] === _0x4fa456(275)) {
            try {
              _0x5c2d0a[_0x3bec25(509)](_0x43647d, {
                store: _0x5c4ca5,
                RNTVoid: _0x508c65
              });
            } catch (_0x18cb10) {
              console[_0x3bec25(847)](_0x3bec25(539), _0x18cb10);
            }
          }
          if (_0x43647d[_0x3bec25(551)] === _0x3bec25(614) && _0x5c2d0a[_0x3bec25(907)] === _0x3bec25(614)) {
            try {
              _0x5c2d0a[_0x3bec25(509)](_0x43647d, {
                store: _0x5c4ca5,
                RNTVoid: _0x508c65
              });
            } catch (_0x55e3a4) {
              console[_0x4fa456(502)](_0x3bec25(733), _0x55e3a4);
            }
          }
          if (_0x5c2d0a[_0x3bec25(907)] === "on" || _0x5c2d0a[_0x3bec25(907)] === _0x3bec25(907) || _0x5c2d0a[_0x3bec25(907)] === _0x3bec25(665) || _0x5c2d0a[_0x3bec25(907)] === _0x3bec25(428)) {
            try {
              _0x5c2d0a[_0x3bec25(509)](_0x43647d, {
                store: _0x5c4ca5,
                RNTVoid: _0x508c65
              });
            } catch (_0x4cbd5f) {
              console[_0x4fa456(502)](_0x4fa456(434), _0x4cbd5f);
            }
          }
        });
      });
      _0x508c65[_0x3f938f(549)] = _0x515b46 => {
        const _0x32a16e = _0xd5bc3a;
        const _0x6a1a85 = _0x3f938f;
        if (!_0x515b46) {
          return _0x515b46;
        }
        if (/:\d+@/gi[_0x6a1a85(535)](_0x515b46)) {
          let _0x5e51f2 = jidDecode(_0x515b46) || {};
          return _0x5e51f2[_0x32a16e(591)] && _0x5e51f2[_0x6a1a85(432)] && _0x5e51f2[_0x32a16e(591)] + "@" + _0x5e51f2[_0x6a1a85(432)] || _0x515b46;
        } else {
          return _0x515b46;
        }
      };
      _0x508c65[_0x3f938f(348)] = (_0x12cc97, _0x28e40a = false) => {
        const _0x43bb56 = _0xd5bc3a;
        const _0x52323c = _0x3f938f;
        let _0x2ea623 = _0x508c65[_0x52323c(549)](_0x12cc97);
        let _0x276110;
        let _0x1cf69f = "+" + _0x12cc97[_0x43bb56(310)](_0x52323c(341), "");
        if (_0x2ea623[_0x52323c(636)](_0x52323c(730))) {
          return new Promise(async _0x145447 => {
            const _0x5e1d6f = _0x43bb56;
            const _0x4395b4 = _0x52323c;
            _0x276110 = _0x5c4ca5[_0x4395b4(473)][_0x2ea623] || {};
            if (!_0x276110[_0x4395b4(895)]?.[_0x4395b4(867)] && !_0x276110[_0x4395b4(598)]) {
              _0x276110 = (await _0x508c65[_0x5e1d6f(148)](_0x2ea623)) || {};
            }
            _0x145447(_0x276110[_0x4395b4(598)] || _0x276110[_0x4395b4(895)] || _0x1cf69f);
          });
        } else {
          _0x276110 = _0x2ea623 === _0x43bb56(416) ? {
            id: _0x2ea623,
            name: _0x43bb56(623)
          } : _0x2ea623 === _0x508c65[_0x52323c(549)](_0x508c65[_0x52323c(908)].id) ? _0x508c65[_0x52323c(908)] : _0x5c4ca5[_0x43bb56(332)][_0x2ea623] || {};
        }
        if (_0x276110[_0x52323c(895)] || _0x276110[_0x52323c(598)] || _0x276110[_0x43bb56(415)]) {
          return _0x276110[_0x52323c(895)] || _0x276110[_0x52323c(598)] || _0x276110[_0x52323c(496)] || _0x1cf69f;
        } else {
          return userdb[_0x52323c(771)]({
            id: _0x2ea623
          })[_0x52323c(402)](_0x20c9dd => _0x20c9dd[_0x43bb56(329)] || _0x1cf69f)[_0x52323c(392)](_0x547355 => {
            _0x1cf69f;
          });
        }
      };
      _0x508c65[_0x3f938f(442)] = async (_0x31c7f6, _0x8757e6, _0x1996ee = "", _0x2767d5 = {}) => {
        const _0x2f61cb = _0xd5bc3a;
        const _0x23aa13 = _0x3f938f;
        let _0x12dbd3 = [];
        for (let _0x4eb6c9 of _0x8757e6) {
          _0x12dbd3[_0x23aa13(723)]({
            displayName: await _0x508c65[_0x23aa13(348)](_0x4eb6c9 + _0x2f61cb(346)),
            vcard: _0x23aa13(631) + (await _0x508c65[_0x23aa13(348)](_0x4eb6c9 + _0x23aa13(341))) + _0x23aa13(793) + global[_0x2f61cb(601)] + _0x23aa13(548) + _0x4eb6c9 + ":" + _0x4eb6c9 + _0x23aa13(734) + global[_0x23aa13(415)] + "\nitem2.X-ABLabel:GitHub\nitem3.URL:" + global[_0x23aa13(589)] + _0x23aa13(396) + global[_0x23aa13(454)] + _0x23aa13(750)
          });
        }
        _0x508c65[_0x23aa13(325)](_0x31c7f6, {
          contacts: {
            displayName: _0x12dbd3[_0x23aa13(447)] + _0x23aa13(425),
            contacts: _0x12dbd3
          },
          ..._0x2767d5
        }, {
          quoted: _0x1996ee
        });
      };
      _0x508c65[_0x3f938f(797)] = _0x312e35 => smsg(_0x508c65, _0x312e35, _0x5c4ca5, false);
      _0x508c65.ev.on(_0x3f938f(572), async _0x59e59a => {
        const _0x4bcb4d = _0xd5bc3a;
        const _0x2d2077 = _0x3f938f;
        try {
          const {
            connection: _0x247d2a,
            lastDisconnect: _0xba48c9,
            qr: _0xd0b178
          } = _0x59e59a;
          if (_0xd0b178 && _0xd22ace[_0x4bcb4d(171)] === "qr") {
            try {
              const _0x498ac0 = require(_0x2d2077(552));
              showQr[_0x518fa2] = showQr[_0x518fa2] ? showQr[_0x518fa2] : 0;
              if (showQr && showQr[_0x518fa2] > 1) {
                await _0x2b61e6[_0x2d2077(543)](_0x2d2077(376));
                print("END ----- CALLED!");
                _0x508c65[_0x2d2077(489)]();
                return;
              } else {
                showQr[_0x518fa2] += 1;
              }
              await _0x2b42a1(_0x3bbf71, await _0x498ac0[_0x2d2077(356)](_0xd0b178, {
                scale: 8
              }), _0x2d2077(909), _0x2b61e6);
            } catch (_0x1c2e7d) {
              console[_0x2d2077(659)](_0x1c2e7d);
              await _0x2b61e6[_0x2d2077(543)](_0x2d2077(351));
              print(_0x2d2077(319));
              _0x508c65[_0x2d2077(489)]();
            }
          }
          if (_0x247d2a === _0x4bcb4d(176)) {
            print(_0x2d2077(514));
          }
          if (_0x247d2a === _0x4bcb4d(447)) {
            delete showQr[_0x518fa2];
            _0xd22ace[_0x2d2077(579)] = _0x2d2077(774);
            const _0x21788f = await _0x508c65[_0x4bcb4d(392)](_0x508c65[_0x2d2077(908)].id);
            let _0x27f249 = _0x21788f[_0x2d2077(524)]("@")[0];
            if (_0x518fa2 !== _0x27f249 || !_0x563e44) {
              try {
                await sleep(10000);
                let _0x45e2a9 = fs[_0x2d2077(531)](_0x58b21e);
                if (!_0x563e44 && _0x45e2a9) {
                  _0x563e44 = Buffer[_0x2d2077(512)](_0x45e2a9)[_0x2d2077(412)](_0x2d2077(450));
                  let _0x468f6c = _0x2d2077(646);
                  await _0x508c65[_0x2d2077(325)](_0x21788f, {
                    text: _0x4bcb4d(537) + _0x563e44
                  });
                }
                if (_0x518fa2 !== _0x27f249) {
                  _0xd22ace = {
                    type: _0x4bcb4d(199),
                    session: _0x563e44,
                    user: _0x27f249
                  };
                  try {
                    Rentt(_0x2b61e6[_0x2d2077(444)], _0x2b61e6, _0x563e44, _0xd22ace);
                    print(_0x2d2077(319));
                    _0x508c65[_0x2d2077(489)]();
                    await _0x4a181d(__dirname + _0xb74ba7, _0x2d2077(810));
                    return;
                  } catch (_0x4dadca) {}
                }
              } catch (_0x5eb483) {
                console[_0x2d2077(659)](_0x5eb483);
              }
            }
            print(_0x2d2077(371));
            global[_0x2d2077(626)][_0x2d2077(723)](_0x508c65);
            let _0x5d2c36 = _0x4bcb4d(721) + (prefix || _0x2d2077(711)) + _0x2d2077(485) + Config[_0x4bcb4d(528)] + _0x2d2077(897) + events[_0x2d2077(756)][_0x2d2077(447)] + _0x2d2077(453);
            await _0x2b61e6[_0x4bcb4d(514)](_0x2d2077(314) + _0x27f249 + _0x4bcb4d(556), {
              mentions: [_0x21788f]
            }, _0x2d2077(660));
            print(_0x2d2077(786) + _0x21788f[_0x2d2077(524)]("@")[0] + "]\n", _0x5d2c36);
            if (![_0x4bcb4d(146), _0x2d2077(659), _0x2d2077(660)][_0x2d2077(889)](Config[_0x2d2077(490)])) {
              console[_0x2d2077(659)] = function () {};
            }
            await _0x508c65[_0x2d2077(325)](_0x21788f, {
              text: ("" + _0x5d2c36)[_0x2d2077(463)](),
              contextInfo: {
                externalAdReply: {
                  title: _0x2d2077(811),
                  sourceUrl: _0x4bcb4d(169)
                }
              }
            }, {
              disappearingMessagesInChat: true,
              ephemeralExpiration: 86400
            });
          }
          if (_0x247d2a === _0x2d2077(662)) {
            try {
              let _0x540c91 = new Boom(_0xba48c9?.[_0x2d2077(847)])?.[_0x2d2077(522)][_0x2d2077(898)];
              if (_0x540c91 === DisconnectReason[_0x2d2077(544)]) {
                print(_0x2d2077(409));
                print(_0x2d2077(319));
                _0x508c65[_0x2d2077(489)]();
              } else if (_0x540c91 === DisconnectReason[_0x2d2077(919)]) {
                print(_0x2d2077(546));
                _0x4b8a84()[_0x2d2077(392)](_0x23148b => console[_0x4bcb4d(173)](_0x23148b));
              } else if (_0x540c91 === DisconnectReason[_0x2d2077(472)]) {
                print(_0x4bcb4d(517));
                print(_0x2d2077(319));
                print(_0x2d2077(319));
                _0x508c65.end();
              } else if (_0x540c91 === DisconnectReason[_0x2d2077(347)]) {
                print(_0x2d2077(557));
                print(_0x2d2077(319));
                _0x508c65[_0x2d2077(489)]();
              } else if (_0x540c91 === DisconnectReason[_0x2d2077(404)]) {
                print(_0x4bcb4d(592));
                print(_0x2d2077(319));
                _0x508c65[_0x2d2077(489)]();
              } else if (_0x540c91 === DisconnectReason[_0x2d2077(518)]) {
                print(_0x2d2077(710));
                _0x4b8a84()[_0x2d2077(392)](_0x10422d => console[_0x2d2077(659)](_0x10422d));
              } else if (_0x540c91 === DisconnectReason[_0x2d2077(355)]) {
                print(_0x4bcb4d(322));
                _0x4b8a84()[_0x2d2077(392)](_0x48a164 => console[_0x2d2077(659)](_0x48a164));
              } else if (print(_0x2d2077(342) + _0x540c91 + "|" + _0x247d2a) && _0x508c65[_0x2d2077(489)]()) {
                print(_0x2d2077(319));
              }
            } catch (_0x34bb9d) {
              console[_0x2d2077(659)](_0x34bb9d);
              if (_0x508c65[_0x2d2077(489)]()) {
                print("END ----- CALLED!");
              }
            }
          }
        } catch (_0x17d2b1) {
          console[_0x2d2077(659)](_0x17d2b1);
          if (_0x508c65[_0x2d2077(489)]()) {
            print(_0x2d2077(319));
          }
        }
      });
      _0x508c65.ev.on(_0x3f938f(564), _0x2f1606);
      _0x508c65[_0x3f938f(451)] = (_0x57ed82, _0x482eef, _0x58b871 = "", _0x4f7129) => _0x508c65[_0x3f938f(325)](_0x57ed82, {
        text: _0x482eef,
        ..._0x4f7129
      }, {
        quoted: _0x58b871
      });
      _0x508c65[_0x3f938f(877)] = async (_0x4a8317, _0x416f0c, _0x331482 = "", _0x49f3c4 = "", _0x541b2c) => {
        const _0x5a9682 = _0xd5bc3a;
        const _0x124da7 = _0x3f938f;
        let _0x5dfaee = Buffer[_0x124da7(400)](_0x416f0c) ? _0x416f0c : /^data:.*?\/.*?;base64,/i[_0x5a9682(317)](_0x416f0c) ? Buffer[_0x5a9682(268)](_0x416f0c[_0x124da7(524)]`,`[1], _0x124da7(450)) : /^https?:\/\//[_0x124da7(535)](_0x416f0c) ? await await getBuffer(_0x416f0c) : fs[_0x5a9682(435)](_0x416f0c) ? fs.readFileSync(_0x416f0c) : Buffer[_0x5a9682(409)](0);
        return await _0x508c65[_0x124da7(325)](_0x4a8317, {
          image: _0x5dfaee,
          caption: _0x331482,
          ..._0x541b2c
        }, {
          quoted: _0x49f3c4
        });
      };
      _0x508c65[_0x3f938f(761)] = async (_0x38b086, _0x482df6, _0x5e6aab, _0x3dee41 = {}) => _0x508c65[_0xd5bc3a(625)](_0x38b086, {
        text: _0x482df6,
        contextInfo: {
          mentionedJid: [..._0x482df6[_0x3f938f(317)](/@(\d{0,16})/g)][_0x3f938f(704)](_0x464f46 => _0x464f46[1] + _0x3f938f(341))
        },
        ..._0x3dee41
      }, {
        quoted: _0x5e6aab
      });
      _0x508c65[_0x3f938f(638)] = async (_0x511561, _0x1f57f7, _0x259bf8 = {}) => {
        const _0xb5695f = _0x3f938f;
        let _0x361e09;
        if (_0x259bf8 && (_0x259bf8[_0xb5695f(479)] || _0x259bf8[_0xb5695f(744)])) {
          _0x361e09 = await writeExifImg(_0x1f57f7, _0x259bf8);
        } else {
          _0x361e09 = await imageToWebp(_0x1f57f7);
        }
        await _0x508c65[_0xb5695f(325)](_0x511561, {
          sticker: {
            url: _0x361e09
          },
          ..._0x259bf8
        }, _0x259bf8);
      };
      _0x508c65[_0xd5bc3a(326)] = async (_0x443be6, _0x39831d, _0x4a63eb = {}) => {
        const _0x12968d = _0x3f938f;
        let _0x55e62e;
        if (_0x4a63eb && (_0x4a63eb[_0x12968d(479)] || _0x4a63eb[_0x12968d(744)])) {
          _0x55e62e = await writeExifVid(_0x39831d, _0x4a63eb);
        } else {
          _0x55e62e = await videoToWebp(_0x39831d);
        }
        await _0x508c65[_0x12968d(325)](_0x443be6, {
          sticker: {
            url: _0x55e62e
          },
          ..._0x4a63eb
        }, _0x4a63eb);
      };
      _0x508c65[_0x3f938f(879)] = async (_0x2a72ca, _0x1264c4, _0x3fc5d7 = "", _0x5724ed = "", _0x130acd = "", _0x5d5766 = {}) => {
        const _0x321859 = _0xd5bc3a;
        const _0x4c7e4c = _0x3f938f;
        let _0x17094b = await _0x508c65[_0x4c7e4c(918)](_0x1264c4, true);
        let {
          mime: _0x3ce03a,
          ext: _0x4451f4,
          res: _0x489e93,
          data: _0x3cc61a,
          filename: _0x12d5b2
        } = _0x17094b;
        if (_0x489e93 && _0x489e93[_0x321859(345)] !== 200 || file[_0x4c7e4c(447)] <= 65536) {
          try {
            throw {
              json: JSON[_0x321859(341)](file[_0x321859(184)]())
            };
          } catch (_0x502f7d) {
            if (_0x502f7d[_0x4c7e4c(594)]) {
              throw _0x502f7d[_0x4c7e4c(594)];
            }
          }
        }
        let _0x274688 = "";
        let _0x5c404d = _0x3ce03a;
        let _0x5df881 = _0x12d5b2;
        if (_0x5d5766.asDocument) {
          _0x274688 = _0x4c7e4c(722);
        }
        if (_0x5d5766[_0x4c7e4c(429)] || /webp/[_0x4c7e4c(535)](_0x3ce03a)) {
          let {
            writeExif: _0xf6825f
          } = require(_0x4c7e4c(648));
          let _0xdd833f = {
            mimetype: _0x3ce03a,
            data: _0x3cc61a
          };
          _0x5df881 = await _0xf6825f(_0xdd833f, {
            packname: _0x5d5766[_0x4c7e4c(479)] ? _0x5d5766[_0x4c7e4c(479)] : Config[_0x4c7e4c(479)],
            author: _0x5d5766[_0x4c7e4c(744)] ? _0x5d5766[_0x4c7e4c(744)] : Config[_0x4c7e4c(744)],
            categories: _0x5d5766[_0x4c7e4c(399)] ? _0x5d5766[_0x321859(253)] : []
          });
          await fs[_0x321859(506)][_0x4c7e4c(388)](_0x12d5b2);
          _0x274688 = _0x321859(196);
          _0x5c404d = _0x4c7e4c(517);
        } else if (/image/[_0x4c7e4c(535)](_0x3ce03a)) {
          _0x274688 = _0x4c7e4c(386);
        } else if (/video/[_0x4c7e4c(535)](_0x3ce03a)) {
          _0x274688 = _0x4c7e4c(619);
        } else if (/audio/[_0x4c7e4c(535)](_0x3ce03a)) {
          _0x274688 = _0x321859(456);
        } else {
          _0x274688 = _0x4c7e4c(722);
        }
        await _0x508c65[_0x4c7e4c(325)](_0x2a72ca, {
          [_0x274688]: {
            url: _0x5df881
          },
          caption: _0x5724ed,
          mimetype: _0x5c404d,
          fileName: _0x3fc5d7,
          ..._0x5d5766
        }, {
          quoted: _0x130acd,
          ..._0x5d5766
        });
        return fs[_0x4c7e4c(575)][_0x4c7e4c(388)](_0x5df881);
      };
      _0x508c65[_0x3f938f(686)] = async (_0x306ead, _0x31d968 = _0x3f938f(711), _0x214886 = true) => {
        const _0x24b559 = _0xd5bc3a;
        const _0x3f544a = _0x3f938f;
        let _0x35a271 = _0x306ead[_0x3f544a(849)] ? _0x306ead[_0x3f544a(849)] : _0x306ead;
        let _0xe84b8b = (_0x306ead[_0x3f544a(849)] || _0x306ead).mimetype || "";
        let _0x5f0b4c = _0x306ead.mtype ? _0x306ead[_0x3f544a(344)][_0x3f544a(782)](/Message/gi, "") : _0xe84b8b[_0x24b559(687)]("/")[0];
        const _0x50807e = await downloadContentFromMessage(_0x35a271, _0x5f0b4c);
        let _0x5ab97b = Buffer[_0x3f544a(512)]([]);
        for await (const _0x28c927 of _0x50807e) {
          _0x5ab97b = Buffer[_0x3f544a(827)]([_0x5ab97b, _0x28c927]);
        }
        let _0x2b3db3 = await FileType[_0x24b559(343)](_0x5ab97b);
        let _0x469d85 = _0x3f544a(656) + (await fs.writeFileSync(_0x469d85, _0x5ab97b));
        return _0x469d85;
      };
      _0x508c65[_0x3f938f(746)] = async (_0x524ead, _0x368993, _0x3477d1, _0x3ca722, _0x1c175c = true) => {
        const _0x3e992b = _0xd5bc3a;
        const _0x580f56 = _0x3f938f;
        try {
          let _0x419272 = _0x368993[_0x580f56(344)];
          let _0x31cd95 = {};
          console[_0x3e992b(173)](_0x580f56(851), _0x419272);
          if (_0x419272 == _0x3e992b(693)) {
            _0x31cd95 = {
              text: _0x368993.text,
              contextInfo: _0x3477d1
            };
            for (let _0x2d1947 of parsedJid(_0x524ead)) {
              await _0x508c65.sendMessage(_0x2d1947, _0x31cd95, {
                quoted: _0x3ca722
              });
            }
            return;
          }
          const _0xb1e307 = _0x5cafc9 => {
            const _0x1b4302 = _0x580f56;
            return "" + Math[_0x1b4302(888)](Math[_0x1b4302(434)]() * 10000) + _0x5cafc9;
          };
          let _0x1df3cd = _0x368993[_0x580f56(849)] ? _0x368993[_0x580f56(849)] : _0x368993;
          let _0x189aa3 = (_0x368993[_0x3e992b(642)] || _0x368993)[_0x580f56(624)] || "";
          let _0x5cba5a = _0x368993[_0x580f56(344)] ? _0x368993[_0x3e992b(469)][_0x3e992b(310)](/Message/gi, "") : _0x189aa3[_0x580f56(524)]("/")[0];
          const _0x562a0d = await downloadContentFromMessage(_0x1df3cd, _0x5cba5a);
          let _0x2b610e = Buffer[_0x580f56(512)]([]);
          for await (const _0x32aba4 of _0x562a0d) {
            _0x2b610e = Buffer.concat([_0x2b610e, _0x32aba4]);
          }
          let _0x479dd3 = await FileType[_0x580f56(689)](_0x2b610e);
          let _0x24c5b3 = await _0xb1e307(_0x479dd3[_0x580f56(593)]);
          let _0x512803 = _0x3e992b(644) + _0x24c5b3;
          await fs[_0x3e992b(414)](_0x512803, _0x2b610e);
          if (_0x419272 == _0x3e992b(402)) {
            _0x31cd95 = {
              video: fs[_0x580f56(531)](_0x512803),
              mimetype: _0x368993[_0x580f56(624)],
              caption: _0x368993.text,
              contextInfo: _0x3477d1
            };
          } else if (_0x419272 == "imageMessage") {
            _0x31cd95 = {
              image: fs[_0x580f56(531)](_0x512803),
              mimetype: _0x368993[_0x580f56(624)],
              caption: _0x368993[_0x580f56(839)],
              contextInfo: _0x3477d1
            };
          } else if (_0x419272 == _0x3e992b(422)) {
            _0x31cd95 = {
              audio: fs[_0x580f56(531)](_0x512803),
              mimetype: _0x368993[_0x580f56(624)],
              seconds: 200001355,
              ptt: true,
              contextInfo: _0x3477d1
            };
          } else if (_0x419272 == _0x3e992b(231) || _0x479dd3 == _0x580f56(612)) {
            _0x31cd95 = {
              document: fs[_0x580f56(531)](_0x512803),
              mimetype: _0x368993[_0x580f56(624)],
              caption: _0x368993[_0x580f56(839)],
              contextInfo: _0x3477d1
            };
          } else {
            fs[_0x3e992b(259)](_0x512803, _0x1c7003 => {
              const _0x46d769 = _0x3e992b;
              const _0x47b149 = _0x580f56;
              if (_0x1c7003) {
                console[_0x47b149(847)](_0x46d769(596), _0x1c7003);
              } else {
                console[_0x47b149(659)](_0x46d769(580));
              }
            });
          }
          for (let _0x8280c4 of parsedJid(_0x524ead)) {
            try {
              await _0x508c65[_0x3e992b(625)](_0x8280c4, _0x31cd95, {
                quoted: _0x3ca722
              });
            } catch (_0x1a0257) {}
          }
          return fs[_0x580f56(388)](_0x512803, _0x2e0830 => {
            const _0x2cdd82 = _0x3e992b;
            const _0x1e4b9d = _0x580f56;
            if (_0x2e0830) {
              console[_0x1e4b9d(847)](_0x1e4b9d(820), _0x2e0830);
            } else {
              console[_0x2cdd82(173)](_0x1e4b9d(905));
            }
          });
        } catch (_0x3bd104) {
          console[_0x580f56(659)](_0x3bd104);
        }
      };
      _0x508c65[_0x3f938f(459)] = async _0xea9342 => {
        const _0x1a29a = _0xd5bc3a;
        const _0x1ef272 = _0x3f938f;
        let _0x247e4a = _0xea9342[_0x1ef272(849)] ? _0xea9342[_0x1ef272(849)] : _0xea9342;
        let _0x1561f3 = (_0xea9342[_0x1ef272(849)] || _0xea9342)[_0x1a29a(273)] || "";
        let _0x24a703 = _0xea9342[_0x1ef272(344)] ? _0xea9342[_0x1ef272(344)][_0x1ef272(782)](/Message/gi, "") : _0x1561f3[_0x1a29a(687)]("/")[0];
        const _0x3485d4 = await downloadContentFromMessage(_0x247e4a, _0x24a703);
        let _0x2f9c34 = Buffer[_0x1a29a(268)]([]);
        for await (const _0x24e77a of _0x3485d4) {
          _0x2f9c34 = Buffer[_0x1ef272(827)]([_0x2f9c34, _0x24e77a]);
        }
        return _0x2f9c34;
      };
      _0x508c65[_0x3f938f(477)] = async (_0x23dcc7, _0x5bfabe, _0x5a7590 = {}, _0x4cd4cf = "") => {
        const _0x15f531 = _0xd5bc3a;
        const _0x70f529 = _0x3f938f;
        try {
          let _0x2010e5 = _0x5bfabe.mtype;
          if (_0x2010e5 === _0x70f529(483) && _0x4cd4cf === _0x15f531(493)) {
            _0x5bfabe = {
              ptvMessage: {
                ..._0x5bfabe[_0x70f529(849)]
              }
            };
          }
          let _0x475460 = {
            ..._0x5a7590,
            contextInfo: {
              ...(_0x5a7590[_0x70f529(654)] ? _0x5a7590[_0x70f529(654)] : {}),
              ...(_0x5a7590[_0x70f529(474)] ? {
                linkPreview: {
                  ..._0x5a7590[_0x15f531(567)]
                }
              } : {}),
              ...(_0x5a7590[_0x70f529(387)] && _0x5a7590[_0x70f529(387)][_0x70f529(511)] ? {
                quotedMessage: {
                  ...(_0x5a7590[_0x70f529(387)]?.[_0x70f529(511)] || {})
                }
              } : {})
            }
          };
          console[_0x70f529(659)]("\n\nopts : ", _0x475460, "\n\n");
          var _0x247a58 = _0x5bfabe[_0x70f529(511)] ? _0x5bfabe[_0x70f529(511)] : _0x5bfabe;
          let _0x83a2cf = _0x2010e5 ? _0x2010e5 : Object[_0x70f529(848)](_0x247a58)[0];
          _0x247a58 = {
            ..._0x475460,
            ..._0x247a58
          };
          const _0x3464b2 = await generateWAMessageFromContent(_0x23dcc7, _0x247a58, _0x5a7590 ? {
            ...(_0x83a2cf == _0x70f529(466) ? {
              conversation: _0x247a58[_0x83a2cf]
            } : _0x247a58[_0x83a2cf]),
            ..._0x475460,
            contextInfo: {
              ...(_0x247a58[_0x83a2cf]?.[_0x15f531(398)] || {}),
              ..._0x475460[_0x70f529(654)]
            }
          } : {});
          await _0x508c65[_0x70f529(640)](_0x23dcc7, _0x3464b2[_0x15f531(134)], {
            messageId: _0x3464b2[_0x15f531(658)].id
          });
          console[_0x70f529(659)](_0x15f531(267), _0x3464b2, "\n\n");
          return _0x3464b2;
        } catch {}
      };
      _0x508c65[_0xd5bc3a(242)] = async (_0x4932d9, _0xcb44de, _0x80fbc2 = {}, _0xdd4795 = "") => {
        const _0x289054 = _0xd5bc3a;
        const _0x3f4c66 = _0x3f938f;
        try {
          let _0x22ef11 = _0xcb44de[_0x3f4c66(344)];
          if (_0x22ef11 === "videoMessage" && _0xdd4795 === "ptv") {
            _0xcb44de = {
              ptvMessage: {
                ..._0xcb44de[_0x3f4c66(849)]
              }
            };
          }
          let _0x39a6bc = {
            ..._0x80fbc2
          };
          _0x80fbc2[_0x3f4c66(654)] = {
            ..._0x80fbc2[_0x3f4c66(654)]
          } || {};
          let _0x588e46 = {
            ..._0x80fbc2
          };
          var _0xacf26a = _0xcb44de[_0x3f4c66(511)] ? _0xcb44de[_0x3f4c66(511)] : _0xcb44de;
          let _0x2e21f4 = _0x22ef11 ? _0x22ef11 : Object[_0x3f4c66(848)](_0xacf26a)[0];
          console[_0x3f4c66(659)](_0x289054(304), _0xacf26a);
          const _0x450239 = await generateWAMessageFromContent(_0x4932d9, _0xacf26a, _0x80fbc2 ? {
            ..._0xacf26a[_0x2e21f4],
            ..._0x80fbc2,
            ...(_0x80fbc2[_0x3f4c66(654)] ? {
              contextInfo: {
                ..._0xacf26a[_0x2e21f4][_0x289054(398)],
                ..._0x80fbc2[_0x3f4c66(654)],
                ...(_0x80fbc2[_0x289054(501)] ? {
                  quotedMessage: {
                    ..._0x80fbc2[_0x3f4c66(387)]
                  }
                } : {})
              }
            } : {})
          } : {});
          await _0x508c65[_0x3f4c66(640)](_0x4932d9, _0x450239[_0x3f4c66(511)], {
            messageId: _0x450239[_0x3f4c66(567)].id
          });
          return _0x450239;
        } catch (_0x425d11) {
          console.log(_0x425d11);
        }
      };
      _0x508c65[_0xd5bc3a(379)] = async (_0x3a07cf, _0x3ab466, _0x229692 = false, _0x42ec31 = {}) => {
        const _0x2cc0c2 = _0xd5bc3a;
        const _0x1be0f8 = _0x3f938f;
        try {
          let _0x223f8b;
          if (_0x42ec31[_0x1be0f8(742)]) {
            _0x3ab466[_0x2cc0c2(134)] = _0x3ab466[_0x1be0f8(511)] && _0x3ab466[_0x1be0f8(511)][_0x2cc0c2(480)] && _0x3ab466[_0x1be0f8(511)][_0x1be0f8(914)].message ? _0x3ab466[_0x1be0f8(511)][_0x1be0f8(914)][_0x1be0f8(511)] : _0x3ab466[_0x1be0f8(511)] || undefined;
            _0x223f8b = Object[_0x2cc0c2(636)](_0x3ab466[_0x1be0f8(511)][_0x1be0f8(478)][_0x2cc0c2(134)])[0];
            delete (_0x3ab466[_0x2cc0c2(134)] && _0x3ab466[_0x1be0f8(511)][_0x1be0f8(671)] ? _0x3ab466.message[_0x1be0f8(671)] : _0x3ab466[_0x1be0f8(511)] || undefined);
            delete _0x3ab466[_0x1be0f8(511)][_0x2cc0c2(177)][_0x1be0f8(511)][_0x223f8b][_0x1be0f8(833)];
            _0x3ab466[_0x1be0f8(511)] = {
              ..._0x3ab466[_0x1be0f8(511)][_0x1be0f8(478)][_0x1be0f8(511)]
            };
          }
          let _0x4acf92 = Object[_0x1be0f8(848)](_0x3ab466[_0x2cc0c2(134)])[0];
          let _0x1b31d7 = await generateForwardMessageContent(_0x3ab466, _0x229692);
          let _0x19fdb = Object[_0x1be0f8(848)](_0x1b31d7)[0];
          let _0x13ce5d = {};
          if (_0x4acf92 != _0x1be0f8(466)) {
            _0x13ce5d = _0x3ab466[_0x2cc0c2(134)][_0x4acf92][_0x1be0f8(654)];
          }
          _0x1b31d7[_0x19fdb][_0x2cc0c2(398)] = {
            ..._0x13ce5d,
            ..._0x1b31d7[_0x19fdb][_0x1be0f8(654)]
          };
          const _0x48d6d3 = await generateWAMessageFromContent(_0x3a07cf, _0x1b31d7, _0x42ec31 ? {
            ..._0x1b31d7[_0x19fdb],
            ..._0x42ec31,
            ...(_0x42ec31[_0x2cc0c2(398)] ? {
              contextInfo: {
                ..._0x1b31d7[_0x19fdb][_0x1be0f8(654)],
                ..._0x42ec31[_0x1be0f8(654)]
              }
            } : {})
          } : {});
          await _0x508c65[_0x2cc0c2(615)](_0x3a07cf, _0x48d6d3[_0x1be0f8(511)], {
            messageId: _0x48d6d3[_0x1be0f8(567)].id
          });
          return _0x48d6d3;
        } catch (_0x4fe123) {
          console[_0x1be0f8(659)](_0x4fe123);
        }
      };
      _0x508c65[_0x3f938f(916)] = async (_0x28258d, _0x8ab8e, _0x514847 = "", _0x350c1f = "", _0x513648 = {
        author: _0x3f938f(601)
      }, _0x3c36f6 = "") => {
        const _0x52f50a = _0xd5bc3a;
        const _0x563b30 = _0x3f938f;
        try {
          let _0x5b48dd = await axios[_0x563b30(772)](_0x8ab8e);
          let _0x52e954 = _0x5b48dd?.[_0x563b30(866)][_0x563b30(645)] || "";
          let _0x55a224 = _0x52e954[_0x563b30(524)]("/")[0];
          let _0xe52bb8 = false;
          if (_0x52e954[_0x563b30(524)]("/")[1] === _0x563b30(584) || _0x3c36f6 === _0x563b30(584)) {
            _0xe52bb8 = {
              video: {
                url: _0x8ab8e
              },
              caption: _0x514847,
              gifPlayback: true,
              ..._0x513648
            };
          } else if (_0x52e954[_0x563b30(524)]("/")[1] === _0x563b30(799) || _0x3c36f6 === _0x563b30(449)) {
            _0xe52bb8 = {
              sticker: {
                url: _0x8ab8e
              },
              ..._0x513648
            };
          } else if (_0x55a224 === _0x563b30(386) || _0x3c36f6 === _0x52f50a(562)) {
            _0xe52bb8 = {
              image: {
                url: _0x8ab8e
              },
              caption: _0x514847,
              ..._0x513648,
              mimetype: _0x563b30(345)
            };
          } else if (_0x55a224 === _0x563b30(619) || _0x3c36f6 === _0x52f50a(633)) {
            _0xe52bb8 = {
              video: {
                url: _0x8ab8e
              },
              caption: _0x514847,
              mimetype: _0x563b30(515),
              ..._0x513648
            };
          } else if (_0x55a224 === _0x563b30(370) || _0x3c36f6 === _0x52f50a(456)) {
            _0xe52bb8 = {
              audio: {
                url: _0x8ab8e
              },
              mimetype: _0x563b30(911),
              ..._0x513648
            };
          } else if (_0x52e954 == _0x563b30(637)) {
            _0xe52bb8 = {
              document: {
                url: _0x8ab8e
              },
              mimetype: "application/pdf",
              caption: _0x514847,
              ..._0x513648
            };
          }
          if (_0xe52bb8) {
            try {
              return await _0x508c65[_0x563b30(325)](_0x28258d, _0xe52bb8, {
                quoted: _0x350c1f
              });
            } catch {}
            ;
          }
          try {
            var _0x56a713 = _0x5b48dd?.[_0x563b30(866)]["content-disposition"]?.[_0x52f50a(687)]("=\"")[1]?.[_0x563b30(524)]("\"")[0] || "";
            if (_0x56a713) {
              const _0x187027 = [_0x563b30(829), ".jpeg", _0x52f50a(274)];
              const _0x247114 = [_0x563b30(427), _0x563b30(784), _0x52f50a(443), _0x563b30(872), _0x563b30(887), _0x563b30(331), _0x563b30(843)];
              var _0x5c1e0d = _0x56a713[_0x52f50a(682)](_0x56a713[_0x563b30(697)]("."))?.[_0x563b30(561)]() || _0x563b30(607);
              var _0x49e7af;
              if (_0x187027[_0x563b30(889)](_0x5c1e0d)) {
                _0x49e7af = _0x52f50a(127);
              } else if (_0x247114[_0x563b30(889)](_0x5c1e0d)) {
                _0x49e7af = _0x52f50a(565);
              }
              _0x52e954 = _0x49e7af ? _0x49e7af : _0x52e954;
            }
          } catch (_0xe41a29) {}
          let _0x2f5a3c = {
            fileName: _0x56a713 ? _0x56a713 : _0x563b30(666),
            caption: _0x514847,
            ..._0x513648,
            mimetype: _0x52e954
          };
          return _0x508c65[_0x52f50a(625)](_0x28258d, {
            document: {
              url: _0x8ab8e
            },
            ..._0x2f5a3c
          }, {
            quoted: _0x350c1f
          });
        } catch (_0x4a8308) {
          console[_0x563b30(659)](_0x563b30(615), _0x4a8308);
        }
      };
      _0x508c65[_0x3f938f(738)] = _0x508c65[_0x3f938f(916)];
      const _0x566eb5 = {};
      let _0x5b7d23 = [];
      _0x508c65[_0x3f938f(445)] = async (_0xcf013d, _0x18bada = {}, _0x188570 = "", _0x49249f = "", _0x24a052 = "") => {
        const _0x4874b8 = _0xd5bc3a;
        const _0xf2f50a = _0x3f938f;
        let _0x51ede1 = {};
        try {
          const _0xf822cc = /(https?:\/\/\S+)/gi;
          const _0x4a2729 = [_0xf2f50a(829), _0xf2f50a(720), _0x4874b8(274)];
          const _0x23b57e = [_0xf2f50a(427), _0xf2f50a(784), _0xf2f50a(545), _0xf2f50a(872), _0xf2f50a(887), _0xf2f50a(331), _0xf2f50a(843)];
          let _0x410e94 = video = false;
          if (!_0x5b7d23 || !_0x5b7d23[0]) {
            _0x5b7d23 = Config[_0x4874b8(141)] ? Config[_0xf2f50a(808)][_0xf2f50a(524)](",") : [await botpic()];
            _0x5b7d23 = _0x5b7d23[_0xf2f50a(560)](_0x36acdd => _0x36acdd[_0xf2f50a(463)]() !== "");
          }
          let _0x491cc3 = _0x49249f && _0x24a052 ? _0x24a052 : _0x5b7d23[Math[_0xf2f50a(888)](Math[_0xf2f50a(434)]() * _0x5b7d23[_0xf2f50a(447)])];
          if (!_0x566eb5[_0x491cc3]) {
            const _0x34ff0b = _0x491cc3[_0x4874b8(682)](_0x491cc3[_0x4874b8(589)]("."))[_0xf2f50a(561)]();
            if (_0x4a2729[_0x4874b8(125)](_0x34ff0b)) {
              _0x410e94 = true;
            }
            if (_0x23b57e.includes(_0x34ff0b)) {
              video = true;
            }
            _0x566eb5[_0x491cc3] = {
              image: _0x410e94,
              video: video
            };
          }
          _0x188570 = _0x188570 && _0x188570[_0xf2f50a(387)]?.[_0xf2f50a(567)] ? _0x188570[_0xf2f50a(387)] : _0x188570 || "";
          let _0x151118;
          let _0x2560ae;
          if (!_0x24a052 && Config[_0xf2f50a(808)] === _0xf2f50a(839) || _0x49249f == _0xf2f50a(839)) {
            _0x151118 = {
              text: _0x18bada[_0xf2f50a(860)],
              ..._0x18bada
            };
          } else if (_0x49249f == _0xf2f50a(386) || _0x566eb5[_0x491cc3]?.[_0xf2f50a(386)]) {
            _0x151118 = {
              image: {
                url: _0x491cc3
              },
              ..._0x18bada,
              mimetype: _0xf2f50a(345)
            };
          } else if (_0x49249f == _0x4874b8(633) || _0x566eb5[_0x491cc3]?.[_0xf2f50a(619)]) {
            _0x151118 = {
              video: {
                url: _0x491cc3
              },
              ..._0x18bada,
              mimetype: _0xf2f50a(515),
              gifPlayback: true,
              height: 274,
              width: 540
            };
          }
          _0x51ede1 = {
            ...(await _0x508c65[_0xf2f50a(654)](Config[_0xf2f50a(787)], _0x188570 && _0x188570[_0xf2f50a(613)] ? _0x188570[_0xf2f50a(613)] : Config[_0xf2f50a(581)]))
          };
          if (_0x151118) {
            return _0x508c65[_0xf2f50a(325)](_0xcf013d, {
              contextInfo: _0x51ede1,
              ..._0x151118
            }, {
              quoted: _0x188570
            });
          }
        } catch (_0xdd4ed7) {
          console[_0xf2f50a(659)](_0xf2f50a(502), _0xdd4ed7);
        }
        try {
          return _0x508c65.sendMessage(_0xcf013d, {
            image: {
              url: await botpic()
            },
            contextInfo: _0x51ede1,
            ..._0x18bada
          });
        } catch {
          return _0x508c65[_0xf2f50a(325)](_0xcf013d, {
            text: _0x18bada.caption,
            contextInfo: _0x51ede1,
            ..._0x18bada
          });
        }
      };
      _0x508c65[_0x3f938f(654)] = async (_0x504053 = Config[_0x3f938f(841)], _0x4b80bb = Config[_0x3f938f(581)], _0x5bc103 = log0, _0x1965f5 = 1, _0x1d78f8 = gurl, _0x44762a = false) => {
        const _0x6be511 = _0x3f938f;
        try {
          let _0x24df05 = _0x44762a ? _0x44762a : Config[_0x6be511(416)];
          if (_0x24df05 >= 2) {
            return {
              forwardingScore: 999,
              isForwarded: true,
              externalAdReply: {
                title: _0x504053,
                body: _0x4b80bb,
                renderLargerThumbnail: true,
                thumbnail: _0x5bc103,
                mediaType: _0x1965f5 || 1,
                mediaUrl: _0x1d78f8,
                sourceUrl: _0x1d78f8
              }
            };
          } else if (_0x24df05 == 1) {
            return {
              externalAdReply: {
                title: _0x504053,
                body: _0x4b80bb,
                thumbnail: _0x5bc103,
                mediaType: 1,
                mediaUrl: _0x1d78f8,
                sourceUrl: _0x1d78f8
              }
            };
          } else {
            return {};
          }
        } catch (_0x1049b3) {
          console.log(_0x6be511(684), _0x1049b3);
          return {};
        }
      };
      _0x508c65[_0x3f938f(421)] = (_0x3fa3f8, _0x4016f8, _0x1696f5 = "", _0x259c27 = _0x508c65.user.id, _0x1891da = {}) => {
        const _0x3965f2 = _0xd5bc3a;
        const _0x5ccb00 = _0x3f938f;
        let _0xc444c = Object[_0x3965f2(636)](_0x4016f8[_0x5ccb00(511)])[0];
        let _0x5b2072 = _0xc444c === _0x3965f2(480);
        if (_0x5b2072) {
          _0xc444c = Object[_0x3965f2(636)](_0x4016f8[_0x3965f2(134)][_0x3965f2(480)][_0x5ccb00(511)])[0];
        }
        let _0x10bc2f = _0x5b2072 ? _0x4016f8[_0x5ccb00(511)][_0x5ccb00(914)][_0x5ccb00(511)] : _0x4016f8[_0x5ccb00(511)];
        let _0x2f1c0b = _0x10bc2f[_0xc444c];
        if (typeof _0x2f1c0b === _0x5ccb00(642)) {
          _0x10bc2f[_0xc444c] = _0x1696f5 || _0x2f1c0b;
        } else if (_0x2f1c0b[_0x5ccb00(860)]) {
          _0x2f1c0b[_0x5ccb00(860)] = _0x1696f5 || _0x2f1c0b[_0x3965f2(215)];
        } else if (_0x2f1c0b[_0x5ccb00(839)]) {
          _0x2f1c0b[_0x5ccb00(839)] = _0x1696f5 || _0x2f1c0b.text;
        }
        if (typeof _0x2f1c0b !== _0x5ccb00(642)) {
          _0x10bc2f[_0xc444c] = {
            ..._0x2f1c0b,
            ..._0x1891da
          };
        }
        if (_0x4016f8[_0x5ccb00(567)][_0x3965f2(436)]) {
          _0x259c27 = _0x4016f8[_0x5ccb00(567)][_0x5ccb00(658)] = _0x259c27 || _0x4016f8[_0x3965f2(658)][_0x5ccb00(658)];
        } else if (_0x4016f8[_0x5ccb00(567)][_0x5ccb00(658)]) {
          _0x259c27 = _0x4016f8[_0x5ccb00(567)][_0x5ccb00(658)] = _0x259c27 || _0x4016f8[_0x3965f2(658)][_0x5ccb00(658)];
        }
        if (_0x4016f8[_0x5ccb00(567)].remoteJid[_0x5ccb00(889)](_0x5ccb00(341))) {
          _0x259c27 = _0x259c27 || _0x4016f8[_0x5ccb00(567)][_0x5ccb00(915)];
        } else if (_0x4016f8[_0x5ccb00(567)][_0x5ccb00(915)][_0x3965f2(125)](_0x5ccb00(675))) {
          _0x259c27 = _0x259c27 || _0x4016f8[_0x3965f2(658)][_0x5ccb00(915)];
        }
        _0x4016f8[_0x5ccb00(567)][_0x5ccb00(915)] = _0x3fa3f8;
        _0x4016f8[_0x5ccb00(567)][_0x3965f2(631)] = _0x259c27 === _0x508c65[_0x5ccb00(908)].id;
        return proto[_0x5ccb00(587)][_0x5ccb00(326)](_0x4016f8);
      };
      _0x508c65[_0x3f938f(918)] = async (_0x150081, _0x364fcd) => {
        const _0x105299 = _0xd5bc3a;
        const _0x3d38e7 = _0x3f938f;
        let _0x493613;
        let _0x1b8a3f = Buffer[_0x3d38e7(400)](_0x150081) ? _0x150081 : /^data:.*?\/.*?;base64,/i[_0x3d38e7(535)](_0x150081) ? Buffer[_0x3d38e7(512)](_0x150081[_0x3d38e7(524)]`,`[1], _0x3d38e7(450)) : /^https?:\/\//[_0x105299(317)](_0x150081) ? await (_0x493613 = await getBuffer(_0x150081)) : fs[_0x105299(435)](_0x150081) ? (_0x5a19e5 = _0x150081, fs[_0x105299(291)](_0x150081)) : typeof _0x150081 === _0x3d38e7(642) ? _0x150081 : Buffer[_0x3d38e7(785)](0);
        let _0x3a10e8 = (await FileType[_0x3d38e7(689)](_0x1b8a3f)) || {
          mime: _0x3d38e7(353),
          ext: ".bin"
        };
        let _0x5a19e5 = _0x3d38e7(838) + _0x3a10e8.ext;
        if (_0x1b8a3f && _0x364fcd) {
          fs[_0x3d38e7(575)].writeFile(_0x5a19e5, _0x1b8a3f);
        }
        return {
          res: _0x493613,
          filename: _0x5a19e5,
          size: await getSizeMedia(_0x1b8a3f),
          ..._0x3a10e8,
          data: _0x1b8a3f
        };
      };
      _0x508c65[_0x3f938f(653)] = async (_0x587748, _0x37d369, _0x49f0ff, _0x4f9621 = {
        quoted: ""
      }, _0x4779de = {}) => {
        const _0x2fba38 = _0xd5bc3a;
        const _0x3a11bd = _0x3f938f;
        let _0x527bcb = await _0x508c65[_0x3a11bd(918)](_0x37d369, true);
        let {
          filename: _0x3ff0ac,
          size: _0x3093ac,
          ext: _0x28ca97,
          mime: _0x344e2d,
          data: _0x4a85f3
        } = _0x527bcb;
        let _0x3b9964 = "";
        let _0x4531c6 = _0x344e2d;
        let _0xc57164 = _0x3ff0ac;
        if (_0x4779de[_0x3a11bd(707)]) {
          _0x3b9964 = _0x3a11bd(722);
        }
        if (_0x4779de[_0x2fba38(353)] || /webp/[_0x3a11bd(535)](_0x344e2d)) {
          let {
            writeExif: _0x1d6c38
          } = require(_0x3a11bd(580));
          let _0xa4cc2c = {
            mimetype: _0x344e2d,
            data: _0x4a85f3
          };
          _0xc57164 = await _0x1d6c38(_0xa4cc2c, {
            packname: Config[_0x2fba38(121)],
            author: Config[_0x3a11bd(479)],
            categories: _0x4779de[_0x3a11bd(399)] ? _0x4779de[_0x3a11bd(399)] : []
          });
          await fs[_0x3a11bd(575)][_0x3a11bd(388)](_0x3ff0ac);
          _0x3b9964 = _0x3a11bd(449);
          _0x4531c6 = _0x3a11bd(517);
        } else if (/image/[_0x2fba38(317)](_0x344e2d)) {
          _0x3b9964 = _0x3a11bd(386);
        } else if (/video/[_0x3a11bd(535)](_0x344e2d)) {
          _0x3b9964 = _0x3a11bd(619);
        } else if (/audio/[_0x3a11bd(535)](_0x344e2d)) {
          _0x3b9964 = _0x3a11bd(370);
        } else {
          _0x3b9964 = _0x3a11bd(722);
        }
        await _0x508c65[_0x3a11bd(325)](_0x587748, {
          [_0x3b9964]: {
            url: _0xc57164
          },
          mimetype: _0x4531c6,
          fileName: _0x49f0ff,
          ..._0x4779de
        }, {
          quoted: _0x4f9621 && _0x4f9621[_0x3a11bd(387)] ? _0x4f9621[_0x3a11bd(387)] : _0x4f9621,
          ..._0x4f9621
        });
        return fs[_0x3a11bd(575)][_0x3a11bd(388)](_0xc57164);
      };
      _0x508c65[_0x3f938f(815)] = async (_0x1f453e = _0x3f938f(495), _0x27b5a3 = {}, _0x34131b = _0xd5bc3a(486), _0x562f5c = {}) => {
        const _0x31485e = _0xd5bc3a;
        const _0x12aa44 = _0x3f938f;
        const _0x3044fd = [777, 0, 100, 500, 1000, 999, 2021];
        let _0x4eaaed = {
          id: _0x12aa44(770),
          fromMe: false,
          participant: _0x12aa44(369),
          remoteJid: _0x12aa44(706),
          ..._0x27b5a3
        };
        let _0x10104b = {};
        if (_0x1f453e == _0x31485e(518) || _0x1f453e == _0x31485e(250) || !_0x1f453e) {
          _0x10104b = {
            conversation: _0x34131b
          };
        } else if (_0x1f453e == _0x12aa44(495)) {
          _0x10104b = {
            orderMessage: {
              itemCount: _0x3044fd[Math[_0x12aa44(888)](Math[_0x12aa44(434)]() * 8)],
              status: 1,
              surface: 1,
              message: "‚ùè " + _0x34131b,
              orderTitle: _0x12aa44(320),
              sellerJid: _0x12aa44(559)
            }
          };
        } else if (_0x1f453e == _0x12aa44(533)) {
          _0x10104b = {
            contactMessage: {
              displayName: "" + _0x34131b,
              jpegThumbnail: log0
            }
          };
        } else if (_0x1f453e == _0x12aa44(386)) {
          _0x10104b = {
            imageMessage: {
              jpegThumbnail: log0,
              caption: _0x34131b
            }
          };
        } else if (_0x1f453e == _0x12aa44(619)) {
          _0x10104b = {
            videoMessage: {
              url: log0,
              caption: _0x34131b,
              mimetype: _0x31485e(565),
              fileLength: _0x12aa44(759),
              seconds: 44
            }
          };
        }
        return {
          key: {
            ..._0x4eaaed
          },
          message: {
            ..._0x10104b,
            ..._0x562f5c
          }
        };
      };
      _0x508c65[_0xd5bc3a(702)] = async _0x559044 => {
        const _0x395b6f = _0xd5bc3a;
        const _0x1be7f2 = _0x3f938f;
        return [..._0x559044[_0x395b6f(546)](/@([0-9]{5,16}|0)/g)][_0x1be7f2(704)](_0x16759e => _0x16759e[1] + _0x1be7f2(341));
      };
    }
    _0x4b8a84()[_0x52e0f0(392)](_0x27b646 => console[_0x52e0f0(659)](_0x27b646));
  }, 3000);
};